.. py:module:: ethereum.byzantium.fork_types

Ethereum Types
^^^^^^^^^^^^^^

.. contents:: Table of Contents
    :backlinks: none
    :local:

Introduction
------------

Types re-used throughout the specification, which are specific to Ethereum.


.. only:: stage1

Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ethereum.byzantium.fork_types.Transaction
   ethereum.byzantium.fork_types.Account
   ethereum.byzantium.fork_types.Header
   ethereum.byzantium.fork_types.Block
   ethereum.byzantium.fork_types.Log
   ethereum.byzantium.fork_types.Receipt



Functions
~~~~~~~~~

.. autoapisummary::
   :nosignatures:

   ethereum.byzantium.fork_types.encode_account



Attributes
~~~~~~~~~~

.. autoapisummary::

   ethereum.byzantium.fork_types.Address
   ethereum.byzantium.fork_types.Root
   ethereum.byzantium.fork_types.Bloom
   ethereum.byzantium.fork_types.TX_BASE_COST
   ethereum.byzantium.fork_types.TX_DATA_COST_PER_NON_ZERO
   ethereum.byzantium.fork_types.TX_DATA_COST_PER_ZERO
   ethereum.byzantium.fork_types.TX_CREATE_COST
   ethereum.byzantium.fork_types.EMPTY_ACCOUNT


Module Details
---------------

Address
~~~~~~~



.. py:data:: Address
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 32-32


Root
~~~~



.. py:data:: Root
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 33-33


Bloom
~~~~~



.. py:data:: Bloom
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 35-35


TX_BASE_COST
~~~~~~~~~~~~



.. py:data:: TX_BASE_COST
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 37-37


TX_DATA_COST_PER_NON_ZERO
~~~~~~~~~~~~~~~~~~~~~~~~~



.. py:data:: TX_DATA_COST_PER_NON_ZERO
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 38-38


TX_DATA_COST_PER_ZERO
~~~~~~~~~~~~~~~~~~~~~



.. py:data:: TX_DATA_COST_PER_ZERO
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 39-39


TX_CREATE_COST
~~~~~~~~~~~~~~



.. py:data:: TX_CREATE_COST
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 40-40


Transaction
~~~~~~~~~~~


Atomic operation performed on the block chain.


.. class:: Transaction

   

   .. py:attribute:: nonce
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: gas_price
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: gas
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: to
         :annotation: :Union[ethereum.base_types.Bytes0, Address]

      

   

   .. py:attribute:: value
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: data
         :annotation: :ethereum.base_types.Bytes

      

   

   .. py:attribute:: v
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: r
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: s
         :annotation: :ethereum.base_types.U256

      



Account
~~~~~~~


State associated with an address.


.. class:: Account

   

   .. py:attribute:: nonce
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: balance
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: code
         :annotation: :bytes

      



EMPTY_ACCOUNT
~~~~~~~~~~~~~



.. py:data:: EMPTY_ACCOUNT
   
   

.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :lines: 73-77


encode_account
~~~~~~~~~~~~~~


.. function:: encode_account(raw_account_data: Account, storage_root: ethereum.base_types.Bytes) -> ethereum.base_types.Bytes
   :noindexentry:

   Encode `Account` dataclass.

   Storage is not stored in the `Account` dataclass, so `Accounts` cannot be
   encoded with providing a storage root.




.. undocinclude:: /../src/ethereum/byzantium/fork_types.py
   :language: python
   :pyobject: encode_account

Header
~~~~~~


Header portion of a block on the chain.


.. class:: Header

   

   .. py:attribute:: parent_hash
         :annotation: :ethereum.crypto.hash.Hash32

      

   

   .. py:attribute:: ommers_hash
         :annotation: :ethereum.crypto.hash.Hash32

      

   

   .. py:attribute:: coinbase
         :annotation: :Address

      

   

   .. py:attribute:: state_root
         :annotation: :Root

      

   

   .. py:attribute:: transactions_root
         :annotation: :Root

      

   

   .. py:attribute:: receipt_root
         :annotation: :Root

      

   

   .. py:attribute:: bloom
         :annotation: :Bloom

      

   

   .. py:attribute:: difficulty
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: number
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: gas_limit
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: gas_used
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: timestamp
         :annotation: :ethereum.base_types.U256

      

   

   .. py:attribute:: extra_data
         :annotation: :ethereum.base_types.Bytes

      

   

   .. py:attribute:: mix_digest
         :annotation: :ethereum.base_types.Bytes32

      

   

   .. py:attribute:: nonce
         :annotation: :ethereum.base_types.Bytes8

      



Block
~~~~~


A complete block.


.. class:: Block

   

   .. py:attribute:: header
         :annotation: :Header

      

   

   .. py:attribute:: transactions
         :annotation: :Tuple[Transaction, Ellipsis]

      

   

   .. py:attribute:: ommers
         :annotation: :Tuple[Header, Ellipsis]

      



Log
~~~


Data record produced during the execution of a transaction.


.. class:: Log

   

   .. py:attribute:: address
         :annotation: :Address

      

   

   .. py:attribute:: topics
         :annotation: :Tuple[ethereum.crypto.hash.Hash32, Ellipsis]

      

   

   .. py:attribute:: data
         :annotation: :bytes

      



Receipt
~~~~~~~


Result of a transaction.


.. class:: Receipt

   

   .. py:attribute:: succeeded
         :annotation: :bool

      

   

   .. py:attribute:: cumulative_gas_used
         :annotation: :ethereum.base_types.Uint

      

   

   .. py:attribute:: bloom
         :annotation: :Bloom

      

   

   .. py:attribute:: logs
         :annotation: :Tuple[Log, Ellipsis]

      


