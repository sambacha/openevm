<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structevmc_1_1bytes32" xml:lang="en-US">
<title>evmc::bytes32 Struct Reference</title>
<indexterm><primary>evmc::bytes32</primary></indexterm>
<para>

<para>The fixed size array of 32 bytes for storing 256-bit EVM values. </para>
 
</para>
<para>
<computeroutput>#include &lt;evmc.hpp&gt;</computeroutput>
</para>
Inheritance diagram for evmc::bytes32:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc_1_1bytes32__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for evmc::bytes32:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc_1_1bytes32__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>constexpr <link linkend="_structevmc_1_1bytes32_1a6403d03e29edb4f87fb272cdbde1cdc6">bytes32</link> (<link linkend="_structevmc__bytes32">evmc_bytes32</link> init={}) noexcept</para>

<para>Default and converting constructor. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_structevmc_1_1bytes32_1acf31b9ad2a8140d04eddc560fccf005b">bytes32</link> (uint64_t v) noexcept</para>

<para>Converting constructor from unsigned integer value. </para>
</listitem>
            <listitem><para>constexpr <link linkend="_structevmc_1_1bytes32_1a3b9c7873f62eec5ba22de9cdcf90587e">operator bool</link> () const noexcept</para>

<para>Explicit operator converting to bool. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The fixed size array of 32 bytes for storing 256-bit EVM values. </para>



<para>This type wraps C <link linkend="_structevmc__bytes32">evmc_bytes32</link> to make sure objects of this type are always initialized. </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00066">66</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structevmc_1_1bytes32_1a6403d03e29edb4f87fb272cdbde1cdc6"/><section>
    <title>bytes32()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>bytes32</primary><secondary>evmc::bytes32</secondary></indexterm>
<indexterm><primary>evmc::bytes32</primary><secondary>bytes32</secondary></indexterm>
<para><computeroutput>constexpr evmc::bytes32::bytes32 (<link linkend="_structevmc__bytes32">evmc_bytes32</link> init = <computeroutput>{}</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Default and converting constructor. </para>
</para>

<para>Initializes bytes to zeros if not other <computeroutput>init</computeroutput> value provided. </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00071">71</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_structevmc_1_1bytes32_1l00071"/>00071 {})&#32;<emphasis role="keyword">noexcept</emphasis>&#32;:&#32;<link linkend="_structevmc__bytes32">evmc_bytes32</link>{init}&#32;{}
</programlisting></section>
<anchor xml:id="_structevmc_1_1bytes32_1acf31b9ad2a8140d04eddc560fccf005b"/><section>
    <title>bytes32()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>bytes32</primary><secondary>evmc::bytes32</secondary></indexterm>
<indexterm><primary>evmc::bytes32</primary><secondary>bytes32</secondary></indexterm>
<para><computeroutput>constexpr evmc::bytes32::bytes32 (uint64_t v)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Converting constructor from unsigned integer value. </para>
</para>

<para>This constructor assigns the <computeroutput>v</computeroutput> value to the last 8 bytes [24:31] in big-endian order. </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00077">77</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_structevmc_1_1bytes32_1l00078"/>00078 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_structevmc__bytes32">evmc_bytes32</link>{{0,
<anchor xml:id="_structevmc_1_1bytes32_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0,
<anchor xml:id="_structevmc_1_1bytes32_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;56),
<anchor xml:id="_structevmc_1_1bytes32_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;48),
<anchor xml:id="_structevmc_1_1bytes32_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;40),
<anchor xml:id="_structevmc_1_1bytes32_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;32),
<anchor xml:id="_structevmc_1_1bytes32_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;24),
<anchor xml:id="_structevmc_1_1bytes32_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;16),
<anchor xml:id="_structevmc_1_1bytes32_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;8),
<anchor xml:id="_structevmc_1_1bytes32_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">static_cast&lt;</emphasis>uint8_t<emphasis role="keyword">&gt;</emphasis>(v&#32;&gt;&gt;&#32;0)}}
<anchor xml:id="_structevmc_1_1bytes32_1l00110"/>00110 &#32;&#32;&#32;&#32;{}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_structevmc_1_1bytes32_1a3b9c7873f62eec5ba22de9cdcf90587e"/><section>
    <title>operator bool()</title>
<indexterm><primary>operator bool</primary><secondary>evmc::bytes32</secondary></indexterm>
<indexterm><primary>evmc::bytes32</primary><secondary>operator bool</secondary></indexterm>
<para><computeroutput>constexpr evmc::bytes32::operator bool ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[constexpr]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Explicit operator converting to bool. </para>
</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00267">267</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_structevmc_1_1bytes32_1l00268"/>00268 {
<anchor xml:id="_structevmc_1_1bytes32_1l00269"/>00269 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;!<link linkend="_namespaceevmc_1afc53d0e831bda94fbf31a64d224c8d24">is_zero</link>(*<emphasis role="keyword">this</emphasis>);
<anchor xml:id="_structevmc_1_1bytes32_1l00270"/>00270 }
</programlisting>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc_1_1bytes32_a3b9c7873f62eec5ba22de9cdcf90587e_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
include/evmc/<link linkend="_evmc_8hpp">evmc.hpp</link></section>
</section>
