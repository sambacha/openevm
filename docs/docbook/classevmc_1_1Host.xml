<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classevmc_1_1Host" xml:lang="en-US">
<title>evmc::Host Class Reference</title>
<indexterm><primary>evmc::Host</primary></indexterm>
<para>

<para>Abstract class to be used by <link linkend="_classevmc_1_1Host">Host</link> implementations. </para>
 
</para>
<para>
<computeroutput>#include &lt;evmc.hpp&gt;</computeroutput>
</para>
Inheritance diagram for evmc::Host:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classevmc_1_1Host__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for evmc::Host:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classevmc_1_1Host__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structevmc__host__context">evmc_host_context</link> * <link linkend="_classevmc_1_1Host_1abd96a61aa3b45d949cb41cf7778fdf6d">to_context</link> () noexcept</para>

<para>Converts the <link linkend="_classevmc_1_1Host">Host</link> object to the opaque host context pointer. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static const <link linkend="_structevmc__host__interface">evmc_host_interface</link> &amp; <link linkend="_classevmc_1_1Host_1afb96540fea288f02d83f01e185a78374">get_interface</link> () noexcept</para>

<para>Provides access to the global host interface. </para>
</listitem>
            <listitem><para>template&lt;typename DerivedClass  = Host&gt; </para><para>static DerivedClass * <link linkend="_classevmc_1_1Host_1a8f28078b9c8fd003061859ecf31d1bed">from_context</link> (<link linkend="_structevmc__host__context">evmc_host_context</link> *context) noexcept</para>

<para>Converts the opaque host context pointer back to the original <link linkend="_classevmc_1_1Host">Host</link> object. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Abstract class to be used by <link linkend="_classevmc_1_1Host">Host</link> implementations. </para>



<para>When implementing EVMC <link linkend="_classevmc_1_1Host">Host</link>, you can directly inherit from the <link linkend="_classevmc_1_1Host">evmc::Host</link> class. This way your implementation will be simpler by avoiding manual handling of the <link linkend="_structevmc__host__context">evmc_host_context</link> and the <link linkend="_structevmc__host__interface">evmc_host_interface</link>. </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00610">610</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classevmc_1_1Host_1a8f28078b9c8fd003061859ecf31d1bed"/><section>
    <title>from_context()</title>
<indexterm><primary>from_context</primary><secondary>evmc::Host</secondary></indexterm>
<indexterm><primary>evmc::Host</primary><secondary>from_context</secondary></indexterm>
<computeroutput>template&lt;typename DerivedClass  = Host&gt; </computeroutput><para><computeroutput>static DerivedClass * evmc::Host::from_context (<link linkend="_structevmc__host__context">evmc_host_context</link> * context)<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Converts the opaque host context pointer back to the original <link linkend="_classevmc_1_1Host">Host</link> object. </para>
</para>

<para>
                <formalpara>
                    <title>
Template Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>DerivedClass</entry><entry>
<para>The class derived from the <link linkend="_classevmc_1_1Host">Host</link> class. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>context</entry><entry>
<para>The opaque host context pointer. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The pointer to DerivedClass. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00626">626</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1Host_1l00627"/>00627 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1Host_1l00628"/>00628 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;pointer&#32;of&#32;the&#32;Host&#32;base&#32;class.</emphasis>
<anchor xml:id="_classevmc_1_1Host_1l00629"/>00629 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>*&#32;h&#32;=&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_classevmc_1_1Host">Host</link>*<emphasis role="keyword">&gt;</emphasis>(context);
<anchor xml:id="_classevmc_1_1Host_1l00630"/>00630 
<anchor xml:id="_classevmc_1_1Host_1l00631"/>00631 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Additional&#32;downcast,&#32;only&#32;possible&#32;if&#32;DerivedClass&#32;inherits&#32;from&#32;Host.</emphasis>
<anchor xml:id="_classevmc_1_1Host_1l00632"/>00632 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">static_cast&lt;</emphasis>DerivedClass*<emphasis role="keyword">&gt;</emphasis>(h);
<anchor xml:id="_classevmc_1_1Host_1l00633"/>00633 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1Host_1afb96540fea288f02d83f01e185a78374"/><section>
    <title>get_interface()</title>
<indexterm><primary>get_interface</primary><secondary>evmc::Host</secondary></indexterm>
<indexterm><primary>evmc::Host</primary><secondary>get_interface</secondary></indexterm>
<para><computeroutput>const <link linkend="_structevmc__host__interface">evmc_host_interface</link> &amp; evmc::Host::get_interface ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[static]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Provides access to the global host interface. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Reference to the host interface object. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00857">857</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1Host_1l00858"/>00858 {
<anchor xml:id="_classevmc_1_1Host_1l00859"/>00859 &#32;&#32;&#32;&#32;<emphasis role="keyword">static</emphasis>&#32;<emphasis role="keyword">constexpr</emphasis>&#32;<link linkend="_structevmc__host__interface">evmc_host_interface</link>&#32;interface{
<anchor xml:id="_classevmc_1_1Host_1l00860"/>00860 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::account_exists,&#32;::evmc::internal::get_storage,
<anchor xml:id="_classevmc_1_1Host_1l00861"/>00861 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::set_storage,&#32;&#32;&#32;&#32;::evmc::internal::get_balance,
<anchor xml:id="_classevmc_1_1Host_1l00862"/>00862 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::get_code_size,&#32;&#32;::evmc::internal::get_code_hash,
<anchor xml:id="_classevmc_1_1Host_1l00863"/>00863 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::copy_code,&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::selfdestruct,
<anchor xml:id="_classevmc_1_1Host_1l00864"/>00864 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::call,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::get_tx_context,
<anchor xml:id="_classevmc_1_1Host_1l00865"/>00865 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::get_block_hash,&#32;::evmc::internal::emit_log,
<anchor xml:id="_classevmc_1_1Host_1l00866"/>00866 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;::evmc::internal::access_account,&#32;::evmc::internal::access_storage,
<anchor xml:id="_classevmc_1_1Host_1l00867"/>00867 &#32;&#32;&#32;&#32;};
<anchor xml:id="_classevmc_1_1Host_1l00868"/>00868 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;interface;
<anchor xml:id="_classevmc_1_1Host_1l00869"/>00869 }
</programlisting></section>
<anchor xml:id="_classevmc_1_1Host_1abd96a61aa3b45d949cb41cf7778fdf6d"/><section>
    <title>to_context()</title>
<indexterm><primary>to_context</primary><secondary>evmc::Host</secondary></indexterm>
<indexterm><primary>evmc::Host</primary><secondary>to_context</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc__host__context">evmc_host_context</link> * evmc::Host::to_context ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Converts the <link linkend="_classevmc_1_1Host">Host</link> object to the opaque host context pointer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Pointer to <link linkend="_structevmc__host__context">evmc_host_context</link>. </para>
</formalpara>
</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00619">619</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1Host_1l00619"/>00619 {&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">reinterpret_cast&lt;</emphasis><link linkend="_structevmc__host__context">evmc_host_context</link>*<emphasis role="keyword">&gt;</emphasis>(<emphasis role="keyword">this</emphasis>);&#32;}
</programlisting></section>
<para>
The documentation for this class was generated from the following file:</para>
include/evmc/<link linkend="_evmc_8hpp">evmc.hpp</link></section>
</section>
