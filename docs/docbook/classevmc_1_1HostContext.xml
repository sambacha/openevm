<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classevmc_1_1HostContext" xml:lang="en-US">
<title>evmc::HostContext Class Reference</title>
<indexterm><primary>evmc::HostContext</primary></indexterm>
<para>

<para>Wrapper around EVMC host context / host interface. </para>
 
</para>
<para>
<computeroutput>#include &lt;evmc.hpp&gt;</computeroutput>
</para>
Inheritance diagram for evmc::HostContext:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classevmc_1_1HostContext__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for evmc::HostContext:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classevmc_1_1HostContext__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_classevmc_1_1HostContext_1a2a04dc538a47cd599d6e3f9e389aa960">HostContext</link> ()=default</para>

<para>Default constructor for null <link linkend="_classevmc_1_1Host">Host</link> context. </para>
</listitem>
            <listitem><para><link linkend="_classevmc_1_1HostContext_1a3c2eeff87915c8aa8652c5dc2a17f51a">HostContext</link> (const <link linkend="_structevmc__host__interface">evmc_host_interface</link> &amp;interface, <link linkend="_structevmc__host__context">evmc_host_context</link> *ctx) noexcept</para>

<para>Constructor from the EVMC <link linkend="_classevmc_1_1Host">Host</link> primitives. </para>
</listitem>
            <listitem><para>bool <link linkend="_classevmc_1_1HostContext_1a08a0b1cc1f03aff697e9344865047e56">account_exists</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>) const noexcept final</para>

<para>Check account existence callback function. </para>
</listitem>
            <listitem><para><link linkend="_structevmc_1_1bytes32">bytes32</link> <link linkend="_classevmc_1_1HostContext_1afb6bc0d98a19cf760ef9e886366e4108">get_storage</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;key) const noexcept final</para>

<para>Get storage callback function. </para>
</listitem>
            <listitem><para><link linkend="_group__EVMC_1gae012fd6b8e5c23806b507c2d3e9fb1aa">evmc_storage_status</link> <link linkend="_classevmc_1_1HostContext_1accce7c534c0f1e50f70d52a50d2ff659">set_storage</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;key, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;value) noexcept final</para>

<para>Set storage callback function. </para>
</listitem>
            <listitem><para><link linkend="_namespaceevmc_1a92bc6b73f1ce3a2b2eea018cf902c4da">uint256be</link> <link linkend="_classevmc_1_1HostContext_1a2e50fd490162237ac04f26cbd8c9e916">get_balance</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>) const noexcept final</para>

<para>Get balance callback function. </para>
</listitem>
            <listitem><para>size_t <link linkend="_classevmc_1_1HostContext_1a278e6c530fce8397b1dc2de07ba0b26d">get_code_size</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>) const noexcept final</para>

<para>Get code size callback function. </para>
</listitem>
            <listitem><para><link linkend="_structevmc_1_1bytes32">bytes32</link> <link linkend="_classevmc_1_1HostContext_1a06c2f1a5f29be3384b4e48c70198b563">get_code_hash</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>) const noexcept final</para>

<para>Get code hash callback function. </para>
</listitem>
            <listitem><para>size_t <link linkend="_classevmc_1_1HostContext_1a62742a0675d8675dd8ee155b5def02dc">copy_code</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>, size_t code_offset, uint8_t *buffer_data, size_t buffer_size) const noexcept final</para>

<para>Copy code callback function. </para>
</listitem>
            <listitem><para>void <link linkend="_classevmc_1_1HostContext_1a150580ee3efd12661656c4e3ab350457">selfdestruct</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;addr, const <link linkend="_structevmc_1_1address">address</link> &amp;beneficiary) noexcept final</para>

<para>Selfdestruct callback function. </para>
</listitem>
            <listitem><para><link linkend="_classevmc_1_1result">result</link> <link linkend="_classevmc_1_1HostContext_1a47884bf60bd9f503300fae10bdc058f2">call</link> (const <link linkend="_structevmc__message">evmc_message</link> &amp;message) noexcept final</para>

<para>Call callback function. </para>
</listitem>
            <listitem><para><link linkend="_structevmc__tx__context">evmc_tx_context</link> <link linkend="_classevmc_1_1HostContext_1af51f231f8607e7a506a25d8b21874cd1">get_tx_context</link> () const noexcept final</para>

<para>Get transaction context callback function. </para>
</listitem>
            <listitem><para><link linkend="_structevmc_1_1bytes32">bytes32</link> <link linkend="_classevmc_1_1HostContext_1ac7ce942550fee4d6e801af880484e271">get_block_hash</link> (int64_t number) const noexcept final</para>

<para>Get block hash callback function. </para>
</listitem>
            <listitem><para>void <link linkend="_classevmc_1_1HostContext_1acb1f7dabab3134e4ac80f9f6ada590a9">emit_log</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;addr, const uint8_t *data, size_t data_size, const <link linkend="_structevmc_1_1bytes32">bytes32</link> topics[], size_t topics_count) noexcept final</para>

<para>Emit log callback function. </para>
</listitem>
            <listitem><para><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> <link linkend="_classevmc_1_1HostContext_1a703bce4ebfcec7bd8b804e30f7b0d965">access_account</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>) noexcept final</para>

<para>Access account callback function. </para>
</listitem>
            <listitem><para><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> <link linkend="_classevmc_1_1HostContext_1a4132fc7dd93405c5c2fcd2729d7a2be8">access_storage</link> (const <link linkend="_structevmc_1_1address">address</link> &amp;<link linkend="_structevmc_1_1address">address</link>, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;key) noexcept final</para>

<para>Access storage callback function. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Private Attributes    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_structevmc__host__interface">evmc_host_interface</link> * <link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link> = nullptr</para>
</listitem>
            <listitem><para><link linkend="_structevmc__host__context">evmc_host_context</link> * <link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link> = nullptr</para>
</listitem>
            <listitem><para><link linkend="_structevmc__tx__context">evmc_tx_context</link> <link linkend="_classevmc_1_1HostContext_1ac165f0cb7934b5efdeff35b52be50b94">tx_context</link> = {}</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Wrapper around EVMC host context / host interface. </para>



<para>To be used by <link linkend="_classevmc_1_1VM">VM</link> implementations as better alternative to using <link linkend="_structevmc__host__context">evmc_host_context</link> directly. </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00499">499</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classevmc_1_1HostContext_1a2a04dc538a47cd599d6e3f9e389aa960"/><section>
    <title>HostContext()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>HostContext</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>HostContext</secondary></indexterm>
<para><computeroutput>evmc::HostContext::HostContext ( )<computeroutput>[default]</computeroutput></computeroutput></para><para>

<para>Default constructor for null <link linkend="_classevmc_1_1Host">Host</link> context. </para>
</para>
</section>
<anchor xml:id="_classevmc_1_1HostContext_1a3c2eeff87915c8aa8652c5dc2a17f51a"/><section>
    <title>HostContext()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>HostContext</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>HostContext</secondary></indexterm>
<para><computeroutput>evmc::HostContext::HostContext (const <link linkend="_structevmc__host__interface">evmc_host_interface</link> &amp; interface, <link linkend="_structevmc__host__context">evmc_host_context</link> * ctx)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructor from the EVMC <link linkend="_classevmc_1_1Host">Host</link> primitives. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>interface</entry><entry>
<para>The reference to the <link linkend="_classevmc_1_1Host">Host</link> interface. </para>
</entry>
                            </row>
                            <row>
<entry>ctx</entry><entry>
<para>The pointer to the <link linkend="_classevmc_1_1Host">Host</link> context object. This parameter MAY be null. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00512">512</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>{&amp;interface},&#32;<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>{ctx}
<anchor xml:id="_classevmc_1_1HostContext_1l00514"/>00514 &#32;&#32;&#32;&#32;{}
</programlisting></section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classevmc_1_1HostContext_1a703bce4ebfcec7bd8b804e30f7b0d965"/><section>
    <title>access_account()</title>
<indexterm><primary>access_account</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>access_account</secondary></indexterm>
<para><computeroutput><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> evmc::HostContext::access_account (const <link linkend="_structevmc_1_1address">address</link> &amp; addr)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Access account callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ab5ec93cb9fc439fd22cacecc468ed9f8">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00593">593</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00594"/>00594 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00595"/>00595 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1ac5e64cdd3216485a1e20e1f039e5c33a">access_account</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00596"/>00596 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a4132fc7dd93405c5c2fcd2729d7a2be8"/><section>
    <title>access_storage()</title>
<indexterm><primary>access_storage</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>access_storage</secondary></indexterm>
<para><computeroutput><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> evmc::HostContext::access_storage (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; key)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Access storage callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ac0192ce7575fe86b7466405e93484ad8">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00598">598</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00599"/>00599 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00600"/>00600 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1afd574060cfe3eebacbd2c3637e9a60d0">access_storage</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>,&#32;&amp;key);
<anchor xml:id="_classevmc_1_1HostContext_1l00601"/>00601 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a08a0b1cc1f03aff697e9344865047e56"/><section>
    <title>account_exists()</title>
<indexterm><primary>account_exists</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>account_exists</secondary></indexterm>
<para><computeroutput>bool evmc::HostContext::account_exists (const <link linkend="_structevmc_1_1address">address</link> &amp; addr) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Check account existence callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ae735474dc8425b49b3eb0ef12212fae7">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00516">516</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00517"/>00517 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1ac3b71b9670621dd55e8bc047cd289e1a">account_exists</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00519"/>00519 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a47884bf60bd9f503300fae10bdc058f2"/><section>
    <title>call()</title>
<indexterm><primary>call</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>call</secondary></indexterm>
<para><computeroutput><link linkend="_classevmc_1_1result">result</link> evmc::HostContext::call (const <link linkend="_structevmc__message">evmc_message</link> &amp; msg)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Call callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a392feba1f27c9352c85bf2559c1fbcb2">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00561">561</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00562"/>00562 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00563"/>00563 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1result">result</link>{<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a0acd6def9c08159acccfba9f9cbf9ca9">call</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;message)};
<anchor xml:id="_classevmc_1_1HostContext_1l00564"/>00564 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a62742a0675d8675dd8ee155b5def02dc"/><section>
    <title>copy_code()</title>
<indexterm><primary>copy_code</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>copy_code</secondary></indexterm>
<para><computeroutput>size_t evmc::HostContext::copy_code (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, size_t code_offset, uint8_t * buffer_data, size_t buffer_size) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Copy code callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ace3dcf2b277c60cb422f3af1d63dd36b">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00548">548</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00552"/>00552 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a21b53f1aea01f97eeb29ff5d3b5910ea">copy_code</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>,&#32;code_offset,&#32;buffer_data,&#32;buffer_size);
<anchor xml:id="_classevmc_1_1HostContext_1l00554"/>00554 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1acb1f7dabab3134e4ac80f9f6ada590a9"/><section>
    <title>emit_log()</title>
<indexterm><primary>emit_log</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>emit_log</secondary></indexterm>
<para><computeroutput>void evmc::HostContext::emit_log (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, const uint8_t * data, size_t data_size, const <link linkend="_structevmc_1_1bytes32">bytes32</link> topics[], size_t num_topics)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Emit log callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a1f95317392e4615e29ad038fe4ff049d">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00584">584</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00589"/>00589 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00590"/>00590 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1aaa3feda20b9b50381a359b2d4f591f0c">emit_log</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;addr,&#32;data,&#32;data_size,&#32;topics,&#32;topics_count);
<anchor xml:id="_classevmc_1_1HostContext_1l00591"/>00591 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a2e50fd490162237ac04f26cbd8c9e916"/><section>
    <title>get_balance()</title>
<indexterm><primary>get_balance</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_balance</secondary></indexterm>
<para><computeroutput><link linkend="_namespaceevmc_1a92bc6b73f1ce3a2b2eea018cf902c4da">uint256be</link> evmc::HostContext::get_balance (const <link linkend="_structevmc_1_1address">address</link> &amp; addr) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get balance callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ac30e7e938793a2c46e3d5d416e15c3f5">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00533">533</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00534"/>00534 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00535"/>00535 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1acfb80d38a19c3c5a267a68520dae8020">get_balance</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00536"/>00536 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1ac7ce942550fee4d6e801af880484e271"/><section>
    <title>get_block_hash()</title>
<indexterm><primary>get_block_hash</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_block_hash</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc_1_1bytes32">bytes32</link> evmc::HostContext::get_block_hash (int64_t block_number) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get block hash callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ab4fcbbe88b9490f78e0f99c7ce2b167f">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00579">579</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00580"/>00580 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00581"/>00581 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a9cdde67ef20f42f60d3b8949230e8852">get_block_hash</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;number);
<anchor xml:id="_classevmc_1_1HostContext_1l00582"/>00582 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a06c2f1a5f29be3384b4e48c70198b563"/><section>
    <title>get_code_hash()</title>
<indexterm><primary>get_code_hash</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_code_hash</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc_1_1bytes32">bytes32</link> evmc::HostContext::get_code_hash (const <link linkend="_structevmc_1_1address">address</link> &amp; addr) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get code hash callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a748a36bc934302492f54e3fc90cdca88">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00543">543</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00544"/>00544 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a058d2f129c4f4e840258127137801eaf">get_code_hash</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00546"/>00546 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a278e6c530fce8397b1dc2de07ba0b26d"/><section>
    <title>get_code_size()</title>
<indexterm><primary>get_code_size</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_code_size</secondary></indexterm>
<para><computeroutput>size_t evmc::HostContext::get_code_size (const <link linkend="_structevmc_1_1address">address</link> &amp; addr) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get code size callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a8cb4656ab4c478d5fe152b4f6c4b6dc4">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00538">538</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00539"/>00539 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a35897228fa9270f59b7fca4bc373e860">get_code_size</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00541"/>00541 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1afb6bc0d98a19cf760ef9e886366e4108"/><section>
    <title>get_storage()</title>
<indexterm><primary>get_storage</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_storage</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc_1_1bytes32">bytes32</link> evmc::HostContext::get_storage (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; key) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get storage callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a020f849f737fcd841681f73f74514b4d">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00521">521</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00522"/>00522 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a1cfd339e26ceaba522aece2e1a06c6ef">get_storage</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>,&#32;&amp;key);
<anchor xml:id="_classevmc_1_1HostContext_1l00524"/>00524 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1af51f231f8607e7a506a25d8b21874cd1"/><section>
    <title>get_tx_context()</title>
<indexterm><primary>get_tx_context</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>get_tx_context</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc__tx__context">evmc_tx_context</link> evmc::HostContext::get_tx_context ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Get transaction context callback function. </para>
</para>

<para>The implementation caches the received transaction context by assuming that the block timestamp should never be zero.</para>

<para><formalpara><title>Returns</title>

<para>The cached transaction context. </para>
</formalpara>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1a2e958d4265e17048b817626f6fd3cdcc">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00572">572</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00573"/>00573 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_classevmc_1_1HostContext_1ac165f0cb7934b5efdeff35b52be50b94">tx_context</link>.<link linkend="_structevmc__tx__context_1a2391863eab970821d67a08341d9d3440">block_timestamp</link>&#32;==&#32;0)
<anchor xml:id="_classevmc_1_1HostContext_1l00575"/>00575 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classevmc_1_1HostContext_1ac165f0cb7934b5efdeff35b52be50b94">tx_context</link>&#32;=&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1aecdea81d0643b6988e2dc6f57c936ffe">get_tx_context</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>);
<anchor xml:id="_classevmc_1_1HostContext_1l00576"/>00576 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ac165f0cb7934b5efdeff35b52be50b94">tx_context</link>;
<anchor xml:id="_classevmc_1_1HostContext_1l00577"/>00577 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1a150580ee3efd12661656c4e3ab350457"/><section>
    <title>selfdestruct()</title>
<indexterm><primary>selfdestruct</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>selfdestruct</secondary></indexterm>
<para><computeroutput>void evmc::HostContext::selfdestruct (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, const <link linkend="_structevmc_1_1address">address</link> &amp; beneficiary)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Selfdestruct callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1afd78f82767a70ed1e4e68fce6007ad0b">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00556">556</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00557"/>00557 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1a189b040cb7db22778e81d4eb19e87849">selfdestruct</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;addr,&#32;&amp;beneficiary);
<anchor xml:id="_classevmc_1_1HostContext_1l00559"/>00559 &#32;&#32;&#32;&#32;}
</programlisting></section>
<anchor xml:id="_classevmc_1_1HostContext_1accce7c534c0f1e50f70d52a50d2ff659"/><section>
    <title>set_storage()</title>
<indexterm><primary>set_storage</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>set_storage</secondary></indexterm>
<para><computeroutput><link linkend="_group__EVMC_1gae012fd6b8e5c23806b507c2d3e9fb1aa">evmc_storage_status</link> evmc::HostContext::set_storage (const <link linkend="_structevmc_1_1address">address</link> &amp; addr, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; key, const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; value)<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Set storage callback function. </para>
</para>
<para>
Implements <link linkend="_classevmc_1_1HostInterface_1ab302ebc0c838560a6c4b8b1aec21815a">evmc::HostInterface</link>.</para>
<para>
Definition at line <link linkend="_evmc_8hpp_source_1l00526">526</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_classevmc_1_1HostContext_1l00529"/>00529 &#32;&#32;&#32;&#32;{
<anchor xml:id="_classevmc_1_1HostContext_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a">host</link>-&gt;<link linkend="_structevmc__host__interface_1ad24670503f09df720cc008e361a91277">set_storage</link>(<link linkend="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65">context</link>,&#32;&amp;<link linkend="_structevmc_1_1address">address</link>,&#32;&amp;key,&#32;&amp;value);
<anchor xml:id="_classevmc_1_1HostContext_1l00531"/>00531 &#32;&#32;&#32;&#32;}
</programlisting></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_classevmc_1_1HostContext_1a05bbbf5a779852594e075b64656e3f65"/><section>
    <title>context</title>
<indexterm><primary>context</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>context</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc__host__context">evmc_host_context</link>* evmc::HostContext::context = nullptr<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evmc_8hpp_source_1l00502">502</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<anchor xml:id="_classevmc_1_1HostContext_1ae0dd7ed33e2adf24413a10acc9c0bb9a"/><section>
    <title>host</title>
<indexterm><primary>host</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>host</secondary></indexterm>
<para><computeroutput>const <link linkend="_structevmc__host__interface">evmc_host_interface</link>* evmc::HostContext::host = nullptr<computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evmc_8hpp_source_1l00501">501</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<anchor xml:id="_classevmc_1_1HostContext_1ac165f0cb7934b5efdeff35b52be50b94"/><section>
    <title>tx_context</title>
<indexterm><primary>tx_context</primary><secondary>evmc::HostContext</secondary></indexterm>
<indexterm><primary>evmc::HostContext</primary><secondary>tx_context</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc__tx__context">evmc_tx_context</link> evmc::HostContext::tx_context = {}<computeroutput>[mutable]</computeroutput>, <computeroutput>[private]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="_evmc_8hpp_source_1l00503">503</link> of file <link linkend="_evmc_8hpp_source">evmc.hpp</link>.</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
include/evmc/<link linkend="_evmc_8hpp">evmc.hpp</link></section>
</section>
