<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structevmc_1_1storage__value" xml:lang="en-US">
<title>evmc::storage_value Struct Reference</title>
<indexterm><primary>evmc::storage_value</primary></indexterm>
<para>

<para>Extended value (by dirty flag) for account storage. </para>
 
</para>
<para>
<computeroutput>#include &lt;mocked_host.hpp&gt;</computeroutput>
</para>
Collaboration diagram for evmc::storage_value:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc_1_1storage__value__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structevmc_1_1storage__value_1a30176a848e7fbe3a6fd362af8de8d335">storage_value</link> () noexcept=default</para>

<para>Default constructor. </para>
</listitem>
            <listitem><para><link linkend="_structevmc_1_1storage__value_1a792d042c12bd60330a86035a2f35e1eb">storage_value</link> (const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;_value, bool _dirty=false) noexcept</para>

<para>Constructor. </para>
</listitem>
            <listitem><para><link linkend="_structevmc_1_1storage__value_1a163f2a136412c940f283fc6544ae5bed">storage_value</link> (const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp;_value, <link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> _access_status) noexcept</para>

<para>Constructor with initial access status. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_structevmc_1_1bytes32">bytes32</link> <link linkend="_structevmc_1_1storage__value_1a1d0d184e83df0d134fc9353f3cd7ced2">value</link></para>

<para>The storage value. </para>
</listitem>
            <listitem><para>bool <link linkend="_structevmc_1_1storage__value_1addde518355892c58bdbbf6383b6a6993">dirty</link> {false}</para>

<para>True means this value has been modified already by the current transaction. </para>
</listitem>
            <listitem><para><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> <link linkend="_structevmc_1_1storage__value_1a3da155b6ec6cfa5cbd0b1bafb0927b70">access_status</link> {<link linkend="_group__EVMC_1gga9f71195f3873f9979d81d7a5e1b3aaf0a3a719b69a4c3f9d6b9913b47312b5a76">EVMC_ACCESS_COLD</link>}</para>

<para>Is the storage key cold or warm. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Extended value (by dirty flag) for account storage. </para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00018">18</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_structevmc_1_1storage__value_1a30176a848e7fbe3a6fd362af8de8d335"/><section>
    <title>storage_value()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>storage_value</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>storage_value</secondary></indexterm>
<para><computeroutput>evmc::storage_value::storage_value ( )<computeroutput>[default]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Default constructor. </para>
</para>
</section>
<anchor xml:id="_structevmc_1_1storage__value_1a792d042c12bd60330a86035a2f35e1eb"/><section>
    <title>storage_value()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>storage_value</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>storage_value</secondary></indexterm>
<para><computeroutput>evmc::storage_value::storage_value (const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; _value, bool _dirty = <computeroutput>false</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructor. </para>
</para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00033">33</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_structevmc_1_1storage__value_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_structevmc_1_1storage__value_1a1d0d184e83df0d134fc9353f3cd7ced2">value</link>{_value},&#32;<link linkend="_structevmc_1_1storage__value_1addde518355892c58bdbbf6383b6a6993">dirty</link>{_dirty}
<anchor xml:id="_structevmc_1_1storage__value_1l00035"/>00035 &#32;&#32;&#32;&#32;{}
</programlisting></section>
<anchor xml:id="_structevmc_1_1storage__value_1a163f2a136412c940f283fc6544ae5bed"/><section>
    <title>storage_value()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>storage_value</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>storage_value</secondary></indexterm>
<para><computeroutput>evmc::storage_value::storage_value (const <link linkend="_structevmc_1_1bytes32">bytes32</link> &amp; _value, <link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> _access_status)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>

<para>Constructor with initial access status. </para>
</para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00038">38</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_structevmc_1_1storage__value_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;:&#32;<link linkend="_structevmc_1_1storage__value_1a1d0d184e83df0d134fc9353f3cd7ced2">value</link>{_value},&#32;<link linkend="_structevmc_1_1storage__value_1a3da155b6ec6cfa5cbd0b1bafb0927b70">access_status</link>{_access_status}
<anchor xml:id="_structevmc_1_1storage__value_1l00040"/>00040 &#32;&#32;&#32;&#32;{}
</programlisting></section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structevmc_1_1storage__value_1a3da155b6ec6cfa5cbd0b1bafb0927b70"/><section>
    <title>access_status</title>
<indexterm><primary>access_status</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>access_status</secondary></indexterm>
<para><computeroutput><link linkend="_group__EVMC_1ga9f71195f3873f9979d81d7a5e1b3aaf0">evmc_access_status</link> evmc::storage_value::access_status {<link linkend="_group__EVMC_1gga9f71195f3873f9979d81d7a5e1b3aaf0a3a719b69a4c3f9d6b9913b47312b5a76">EVMC_ACCESS_COLD</link>}</computeroutput></para><para>

<para>Is the storage key cold or warm. </para>
</para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00027">27</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
</section>
<anchor xml:id="_structevmc_1_1storage__value_1addde518355892c58bdbbf6383b6a6993"/><section>
    <title>dirty</title>
<indexterm><primary>dirty</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>dirty</secondary></indexterm>
<para><computeroutput>bool evmc::storage_value::dirty {false}</computeroutput></para><para>

<para>True means this value has been modified already by the current transaction. </para>
</para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00024">24</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
</section>
<anchor xml:id="_structevmc_1_1storage__value_1a1d0d184e83df0d134fc9353f3cd7ced2"/><section>
    <title>value</title>
<indexterm><primary>value</primary><secondary>evmc::storage_value</secondary></indexterm>
<indexterm><primary>evmc::storage_value</primary><secondary>value</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc_1_1bytes32">bytes32</link> evmc::storage_value::value</computeroutput></para><para>

<para>The storage value. </para>
</para>
<para>
Definition at line <link linkend="_mocked__host_8hpp_source_1l00021">21</link> of file <link linkend="_mocked__host_8hpp_source">mocked_host.hpp</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
include/evmc/<link linkend="_mocked__host_8hpp">mocked_host.hpp</link></section>
</section>
