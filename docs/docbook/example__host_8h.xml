<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_example__host_8h" xml:lang="en-US">
<title>examples/example_host.h File Reference</title>
<indexterm><primary>examples/example_host.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &lt;evmc/evmc.h&gt;
</programlisting>Include dependency graph for example_host.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="example__host_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="example__host_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>const struct <link linkend="_structevmc__host__interface">evmc_host_interface</link> * <link linkend="_example__host_8h_1a2b1d84d421e1681b6c7b88a443b64ad1">example_host_get_interface</link> ()</para>
</listitem>
            <listitem><para>struct <link linkend="_structevmc__host__context">evmc_host_context</link> * <link linkend="_example__host_8h_1afcd7c127e259a8c93ef093396ee06483">example_host_create_context</link> (struct <link linkend="_structevmc__tx__context">evmc_tx_context</link> tx_context)</para>
</listitem>
            <listitem><para>void <link linkend="_example__host_8h_1ad15b98cff2636aad41bf3f2619827c32">example_host_destroy_context</link> (struct <link linkend="_structevmc__host__context">evmc_host_context</link> *context)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_example__host_8h_1afcd7c127e259a8c93ef093396ee06483"/><section>
    <title>example_host_create_context()</title>
<indexterm><primary>example_host_create_context</primary><secondary>example_host.h</secondary></indexterm>
<indexterm><primary>example_host.h</primary><secondary>example_host_create_context</secondary></indexterm>
<para><computeroutput>struct <link linkend="_structevmc__host__context">evmc_host_context</link> * example_host_create_context (struct <link linkend="_structevmc__tx__context">evmc_tx_context</link> tx_context)</computeroutput></para><para>
Definition at line <link linkend="_example__host_8cpp_source_1l00190">190</link> of file <link linkend="_example__host_8cpp_source">example_host.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_example__host_8h_1l00191"/>00191 {
<anchor xml:id="_example__host_8h_1l00192"/>00192 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;host&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_classExampleHost">ExampleHost</link>{tx_context};
<anchor xml:id="_example__host_8h_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;host-&gt;to_context();
<anchor xml:id="_example__host_8h_1l00194"/>00194 }
</programlisting></section>
<anchor xml:id="_example__host_8h_1ad15b98cff2636aad41bf3f2619827c32"/><section>
    <title>example_host_destroy_context()</title>
<indexterm><primary>example_host_destroy_context</primary><secondary>example_host.h</secondary></indexterm>
<indexterm><primary>example_host.h</primary><secondary>example_host_destroy_context</secondary></indexterm>
<para><computeroutput>void example_host_destroy_context (struct <link linkend="_structevmc__host__context">evmc_host_context</link> * context)</computeroutput></para><para>
Definition at line <link linkend="_example__host_8cpp_source_1l00196">196</link> of file <link linkend="_example__host_8cpp_source">example_host.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_example__host_8h_1l00197"/>00197 {
<anchor xml:id="_example__host_8h_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;evmc::Host::from_context&lt;ExampleHost&gt;(context);
<anchor xml:id="_example__host_8h_1l00199"/>00199 }
</programlisting></section>
<anchor xml:id="_example__host_8h_1a2b1d84d421e1681b6c7b88a443b64ad1"/><section>
    <title>example_host_get_interface()</title>
<indexterm><primary>example_host_get_interface</primary><secondary>example_host.h</secondary></indexterm>
<indexterm><primary>example_host.h</primary><secondary>example_host_get_interface</secondary></indexterm>
<para><computeroutput>const struct <link linkend="_structevmc__host__interface">evmc_host_interface</link> * example_host_get_interface ( )</computeroutput></para><para>
Definition at line <link linkend="_example__host_8cpp_source_1l00185">185</link> of file <link linkend="_example__host_8cpp_source">example_host.cpp</link>.</para>
<programlisting linenumbering="unnumbered"><anchor xml:id="_example__host_8h_1l00186"/>00186 {
<anchor xml:id="_example__host_8h_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;&amp;<link linkend="_classevmc_1_1Host_1afb96540fea288f02d83f01e185a78374">evmc::Host::get_interface</link>();
<anchor xml:id="_example__host_8h_1l00188"/>00188 }
</programlisting>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="example__host_8h_a2b1d84d421e1681b6c7b88a443b64ad1_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
