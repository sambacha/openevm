gASVBwABAAAAAACMDmRvY3V0aWxzLm5vZGVzlIwIZG9jdW1lbnSUk5QpgZR9lCiMCXJhd3NvdXJjZZSMAJSMCGNoaWxkcmVulF2UKGgAjAZ0YXJnZXSUk5QpgZR9lChoBWgGaAddlIwKYXR0cmlidXRlc5R9lCiMA2lkc5RdlIwnbW9kdWxlLWV0aGVyZXVtLmRhb19mb3JrLnZtLmludGVycHJldGVylGGMB2NsYXNzZXOUXZSMBW5hbWVzlF2UjAhkdXBuYW1lc5RdlIwIYmFja3JlZnOUXZSMBWlzbW9klIh1jAd0YWduYW1llGgJjAZzb3VyY2WUjGgvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2Rhb19mb3JrL3ZtL2ludGVycHJldGVyL2luZGV4LnJzdJSMBGxpbmWUSwGMBnBhcmVudJRoA4wJX2RvY3VtZW50lGgDdWKMD3NwaGlueC5hZGRub2Rlc5SMBWluZGV4lJOUKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UKIwEcGFpcpSMKG1vZHVsZTsgZXRoZXJldW0uZGFvX2Zvcmsudm0uaW50ZXJwcmV0ZXKUaBJoBk50lGF1aBxoI2gdaB5oH0sCaCBoA2ghaAN1YmgAjAdzZWN0aW9ulJOUKYGUfZQoaAVoBmgHXZQoaACMBXRpdGxllJOUKYGUfZQoaAWMKkV0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBJbnRlcnByZXRlcpRoB12UaACMBFRleHSUk5SMKkV0aGVyZXVtIFZpcnR1YWwgTWFjaGluZSAoRVZNKSBJbnRlcnByZXRlcpSFlIGUfZQoaAVoBmggaDpoIWgDaB2MXC9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvLnRveC9kb2NzL3N0YWdlMF9vdXQvYXV0b2FwaS8gPT4gZG9jL2RpZmZzlGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9LBGggaDVoIWgDdWJoAIwFdG9waWOUk5QpgZR9lChoBWgG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NCmBlH2UKGgFaAZoB12UKGg5KYGUfZQoaAWMCUZ1bmN0aW9uc5RoB12UaD+MCUZ1bmN0aW9uc5SFlIGUfZQoaAVoBmggankDAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9LH2gganYDAABoIWgDdWJqvwIAACmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwEc3BlY5RqygIAAHVoHGq+AgAAaB2MeS9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIvaW5kZXgucnN0OjQ0OjxhdXRvc3VtbWFyeT6UaB9LAGgganYDAABoIWgDdWJqzgIAACmBlH2UKGgFWMoBAAAKCgoKcHJvY2Vzc19tZXNzYWdlX2NhbGwKCklmIG1lc3NhZ2UuY3VycmVudCBpcyBlbXB0eSB0aGVuIGl0IGNyZWF0ZXMgYSBzbWFydCBjb250cmFjdAoKcHJvY2Vzc19jcmVhdGVfbWVzc2FnZQoKRXhlY3V0ZXMgYSBjYWxsIHRvIGNyZWF0ZSBhIHNtYXJ0IGNvbnRyYWN0LgoKcHJvY2Vzc19tZXNzYWdlCgpFeGVjdXRlcyBhIGNhbGwgdG8gY3JlYXRlIGEgc21hcnQgY29udHJhY3QuCgpleGVjdXRlX2NvZGUKCkV4ZWN1dGVzIGJ5dGVjb2RlIHByZXNlbnQgaW4gdGhlIG1lc3NhZ2UuCgpjb2xsZWN0X2FjY291bnRzX3RvX2RlbGV0ZQoKQ29sbGVjdHMgYWxsIHRoZSBhY2NvdW50cyB0aGF0IHdlcmUgbWFya2VkIGZvciBkZWxldGlvbiBieSB0aGUKCmNhbGN1bGF0ZV9nYXNfcmVmdW5kCgpBZGRzIHVwIHRoZSBnYXMgdGhhdCB3YXMgcmVmdW5kZWQgaW4gZWFjaCBleGVjdXRpb24gZnJhbWUgZHVyaW5nIHRoZZRoB12UatQCAAApgZR9lChoBWgGaAddlGrZAgAAKYGUfZQoaAVoBmgHXZQoat4CAAApgZR9lChoBWgGaAddlGgOfZQoaBBdlGgTXZRo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lGgZXZR1aBxqCQMAAGgdTmgfTmggaiMEAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAhpbnRlcm5hbJSIjAVyZWZpZJSMN2V0aGVyZXVtLmRhb19mb3JrLnZtLmludGVycHJldGVyLnByb2Nlc3NfY3JlYXRlX21lc3NhZ2WUjAhyZWZ0aXRsZZSMN2V0aGVyZXVtLmRhb19mb3JrLnZtLmludGVycHJldGVyLnByb2Nlc3NfY3JlYXRlX21lc3NhZ2WUdWgcaG1oHU5oH05oIGofBAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB2MeS9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIvaW5kZXgucnN0OjQ0OjxhdXRvc3VtbWFyeT6UaB9LAWggahwEAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcav0CAABoHU5oH05oIGoZBAAAdWJq/gIAACmBlH2UKGgFaAZoB12UaGkpgZR9lChoBYwrRXhlY3V0ZXMgYSBjYWxsIHRvIGNyZWF0ZSBhIHNtYXJ0IGNvbnRyYWN0LpRoB12UaD+MK0V4ZWN1dGVzIGEgY2FsbCB0byBjcmVhdGUgYSBzbWFydCBjb250cmFjdC6UhZSBlH2UKGgFaAZoIGpQBAAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB2MeS9ob21lL3J1bm5lci93b3JrL2V4ZWN1dGlvbi1zcGVjcy9leGVjdXRpb24tc3BlY3MvZG9jL2F1dG9hcGkvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIvaW5kZXgucnN0OjQ0OjxhdXRvc3VtbWFyeT6UaB9LAWggak0EAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcav0CAABoHU5oH05oIGoZBAAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGr4AgAAaB1oRGgfSwBoIGqwAwAAaCFoA3ViavkCAAApgZR9lChoBWgGaAddlChq/gIAACmB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bnRlcm5hbJSIjAVyZWZpZJSMO2V0aGVyZXVtLmRhb19mb3JrLnZtLmludGVycHJldGVyLmNvbGxlY3RfYWNjb3VudHNfdG9fZGVsZXRllIwIcmVmdGl0bGWUjDtldGhlcmV1bS5kYW9fZm9yay52bS5pbnRlcnByZXRlci5jb2xsZWN0X2FjY291bnRzX3RvX2RlbGV0ZZR1aBxobWgdTmgfTmggaicFAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHYx5L2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9kb2MvYXV0b2FwaS9ldGhlcmV1bS9kYW9fZm9yay92bS9pbnRlcnByZXRlci9pbmRleC5yc3Q6NDQ6PGF1dG9zdW1tYXJ5PpRoH0sBaCBqJAUAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxq/QIAAGgdTmgfTmggaiEFAAB1Ymr+AgAAKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFjD5Db2xsZWN0cyBhbGwgdGhlIGFjY291bnRzIHRoYXQgd2VyZSBtYXJrZWQgZm9yIGRlbGV0aW9uIGJ5IHRoZZRoB12UaD+MPkNvbGxlY3RzIGFsbCB0aGUgYWNjb3VudHMgdGhhdCB3ZXJlIG1hcmtlZCBmb3IgZGVsZXRpb24gYnkgdGhllIWUgZR9lChoBWgGaCBqWAUAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdjHkvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL2RvYy9hdXRvYXBpL2V0aGVyZXVtL2Rhb19mb3JrL3ZtL2ludGVycHJldGVyL2luZGV4LnJzdDo0NDo8YXV0b3N1bW1hcnk+lGgfSwFoIGpVBQAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGr9AgAAaB1OaB9OaCBqIQUAAHViZWgOfZQoaBBdlGgTXZSMDmNoYW5nZS1yZW1vdmVklGFoFV2UaBddlGgZXZR1aBxq+AIAAGgdaERoH0sAaCBqsAMAAGghaAN1Ymr5AgAAKYGUfZQoaAVoBmgHXZQo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bnY6IEVudmlyb25tZW50CikgLT4gTWVzc2FnZUNhbGxPdXRwdXQ6CiAgICBpZiBtZXNzYWdlLnRhcmdldCA9PSBCeXRlczAoYiIiKToKICAgICAgICBpc19jb2xsaXNpb24gPSBhY2NvdW50X2hhc19jb2RlX29yX25vbmNlKAogICAgICAgICAgICBlbnYuc3RhdGUsIG1lc3NhZ2UuY3VycmVudF90YXJnZXQKICAgICAgICApCiAgICAgICAgaWYgaXNfY29sbGlzaW9uOgogICAgICAgICAgICByZXR1cm4gTWVzc2FnZUNhbGxPdXRwdXQoVWludCgwKSwgVTI1NigwKSwgdHVwbGUoKSwgc2V0KCksIFRydWUpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgZXZtID0gcHJvY2Vzc19jcmVhdGVfbWVzc2FnZShtZXNzYWdlLCBlbnYpCiAgICBlbHNlOgogICAgICAgIGV2bSA9IHByb2Nlc3NfbWVzc2FnZShtZXNzYWdlLCBlbnYpCgogICAgYWNjb3VudHNfdG9fZGVsZXRlID0gY29sbGVjdF9hY2NvdW50c190b19kZWxldGUoZXZtKQogICAgcmVmdW5kX2NvdW50ZXIgPSAoCiAgICAgICAgY2FsY3VsYXRlX2dhc19yZWZ1bmQoZXZtKQogICAgICAgICsgbGVuKGFjY291bnRzX3RvX2RlbGV0ZSkgKiBSRUZVTkRfU0VMRl9ERVNUUlVDVAogICAgKQoKICAgIHJldHVybiBNZXNzYWdlQ2FsbE91dHB1dCgKICAgICAgICBnYXNfbGVmdD1ldm0uZ2FzX2xlZnQsCiAgICAgICAgcmVmdW5kX2NvdW50ZXI9cmVmdW5kX2NvdW50ZXIsCiAgICAgICAgbG9ncz1ldm0ubG9ncyBpZiBub3QgZXZtLmhhc19lcnJlZCBlbHNlICgpLAogICAgICAgIGFjY291bnRzX3RvX2RlbGV0ZT1hY2NvdW50c190b19kZWxldGUsCiAgICAgICAgaGFzX2VycmVkPWV2bS5oYXNfZXJyZWQsCiAgICApCpRoB12UKGg/WM8BAABkZWYgcHJvY2Vzc19tZXNzYWdlX2NhbGwoCiAgICBtZXNzYWdlOiBNZXNzYWdlLCBlbnY6IEVudmlyb25t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IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQpIC0+IEV2bToKICAgICMgdGFrZSBzbmFwc2hvdCBvZiBzdGF0ZSBiZWZvcmUgcHJvY2Vzc2luZyB0aGUgbWVzc2FnZQogICAgYmVnaW5fdHJhbnNhY3Rpb24oZW52LnN0YXRlKQoKICAgIGV2bSA9IHByb2Nlc3NfbWVzc2FnZShtZXNzYWdlLCBlbnYpCiAgICBpZiBub3QgZXZtLmhhc19lcnJlZDoKICAgICAgICBjb250cmFjdF9jb2RlID0gZXZtLm91dHB1dAogICAgICAgIGNvbnRyYWN0X2NvZGVfZ2FzID0gbGVuKGNvbnRyYWN0X2NvZGUpICogR0FTX0NPREVfREVQT1NJVAogICAgICAgIHRyeToKICAgICAgICAgICAgY2hhcmdlX2dhcyhldm0sIGNvbnRyYWN0X2NvZGVfZ2FzKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb25hbEhhbHQ6CiAgICAgICAgICAgIHJvbGxiYWNrX3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgICAgICAgICAgZXZtLmdhc19sZWZ0ID0gVWludCgwKQogICAgICAgICAgICBldm0uaGFzX2VycmVkID0gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNldF9jb2RlKGVudi5zdGF0ZSwgbWVzc2FnZS5jdXJyZW50X3RhcmdldCwgY29udHJhY3RfY29kZSkKICAgICAgICAgICAgY29tbWl0X3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgIGVsc2U6CiAgICAgICAgcm9sbGJhY2tfdHJhbnNhY3Rpb24oZW52LnN0YXRlKQogICAgcmV0dXJuIGV2bQqUaAddlChoP4yoZGVmIHByb2Nlc3NfY3JlYXRlX21lc3NhZ2UobWVzc2FnZTogTWVzc2FnZSwgZW52OiBFbnZpcm9ubWVudCkgLT4gRXZtOgogICAgIyB0YWtlIHNuYXBzaG90IG9mIHN0YXRlIGJlZm9yZSBwcm9jZXNzaW5nIHRoZSBtZXNzYWdlCiAgICBiZWdpbl90cmFuc2FjdGlvbihlbnYuc3RhdGUpCgogICAglIWUgZR9lChoBWgGaCBqtQ4AAGghaANoHWhEaB9LAHVialUJAAApgZR9lChoBWgGaAddlGg/WEYBAAAjIElmIHRoZSBhZGRyZXNzIHdoZXJlIHRoZSBhY2NvdW50IGlzIGJlaW5nIGNyZWF0ZWQgaGFzIHN0b3JhZ2UsIGl0IGlzCiAgICAjIGRlc3Ryb3llZC4gVGhpcyBjYW4gb25seSBoYXBwZW4gaW4gdGhlIGZvbGxvd2luZyBoaWdobHkgdW5saWtlbHkKICAgICMgY2lyY3Vtc3RhbmNlczoKICAgICMgKiBUaGUgYWRkcmVzcyBjcmVhdGVkIGJ5IHR3byBgQ1JFQVRFYCBjYWxscyBjb2xsaWRlLgogICAgIyAqIFRoZSBmaXJzdCBgQ1JFQVRFYCBsZWZ0IGVtcHR5IGNvZGUuCiAgICBkZXN0cm95X3N0b3JhZ2UoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQoKICAgIJSFlIGUfZQoaAVoBmggar0OAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UjAxjaGFuZ2UtYWRkZWSUYWgVXZRoF12UaBldlHVoHGpUCQAAaCBqtQ4AAGghaANoHWhEaB9LAHViaD9YLwIAAGV2bSA9IHByb2Nlc3NfbWVzc2FnZShtZXNzYWdlLCBlbnYpCiAgICBpZiBub3QgZXZtLmhhc19lcnJlZDoKICAgICAgICBjb250cmFjdF9jb2RlID0gZXZtLm91dHB1dAogICAgICAgIGNvbnRyYWN0X2NvZGVfZ2FzID0gbGVuKGNvbnRyYWN0X2NvZGUpICogR0FTX0NPREVfREVQT1NJVAogICAgICAgIHRyeToKICAgICAgICAgICAgY2hhcmdlX2dhcyhldm0sIGNvbnRyYWN0X2NvZGVfZ2FzKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb25hbEhhbHQ6CiAgICAgICAgICAgIHJvbGxiYWNrX3RyYW5zYWN0aW9uKGVudi5zdGF0ZSkKICAgICAgICAgICAgZXZtLmdhc19sZWZ0ID0gVWludCgwKQogICAgICAgICAgICBldm0uaGFzX2VycmVkID0gVHJ1ZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHNldF9jb2RlKGVudi5zdGF0ZSwgbWVzc2FnZS5jdXJyZW50X3Rhcmdl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ZShtZXNzYWdlOiBNZXNzYWdlLCBlbnY6IEVudmlyb25tZW50KSAtPiBFdm06CiAgICBpZiBtZXNzYWdlLmRlcHRoID4gU1RBQ0tfREVQVEhfTElNSVQ6CiAgICAgICAgcmFpc2UgU3RhY2tEZXB0aExpbWl0RXJyb3IoIlN0YWNrIGRlcHRoIGxpbWl0IHJlYWNoZWQiKQoKICAgICMgdGFrZSBzbmFwc2hvdCBvZiBzdGF0ZSBiZWZvcmUgcHJvY2Vzc2luZyB0aGUgbWVzc2FnZQogICAgYmVnaW5fdHJhbnNhY3Rpb24oZW52LnN0YXRlKQoKICAgIHRvdWNoX2FjY291bnQoZW52LnN0YXRlLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0KQoKICAgIGlmIG1lc3NhZ2Uuc2hvdWxkX3RyYW5zZmVyX3ZhbHVlIGFuZCBtZXNzYWdlLnZhbHVlICE9IDA6CiAgICAgICAgbW92ZV9ldGhlcigKICAgICAgICAgICAgZW52LnN0YXRlLCBtZXNzYWdlLmNhbGxlciwgbWVzc2FnZS5jdXJyZW50X3RhcmdldCwgbWVzc2FnZS52YWx1ZQogICAgICAgICkKCiAgICBldm0gPSBleGVjdXRlX2NvZGUobWVzc2FnZSwgZW52KQogICAgaWYgZXZtLmhhc19lcnJlZDoKICAgICAgICAjIHJldmVydCBzdGF0ZSB0byB0aGUgbGFzdCBzYXZlZCBjaGVja3BvaW50CiAgICAgICAgIyBzaW5jZSB0aGUgbWVzc2FnZSBjYWxsIHJlc3VsdGVkIGluIGFuIGVycm9yCiAgICAgICAgcm9sbGJhY2tfdHJhbnNhY3Rpb24oZW52LnN0YXRlKQogICAgZWxzZToKICAgICAgICBjb21taXRfdHJhbnNhY3Rpb24oZW52LnN0YXRlKQogICAgcmV0dXJuIGV2bQqUaAddlGg/WPMCAABkZWYgcHJvY2Vzc19tZXNzYWdlKG1lc3NhZ2U6IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQpIC0+IEV2bToKICAgIGlmIG1lc3NhZ2UuZGVwdGggPiBTVEFDS19ERVBUSF9MSU1JVDoKICAgICAgICByYWlzZSBTdGFja0RlcHRoTGltaXRFcnJvcigiU3RhY2sgZGVwdGggbGltaXQgcmVhY2hlZCIpCgogICAgIyB0YWtlIHNuYXBzaG90IG9mIHN0YXRlIGJlZm9yZSBwcm9jZXNzaW5nIHRoZSBtZXNzYWdlCiAgICBiZWdpbl90cmFuc2FjdGlvbihlbnYuc3RhdGUpCgogICAgdG91Y2hfYWNjb3VudChlbnYuc3RhdGUsIG1lc3NhZ2UuY3VycmVudF90YXJnZXQpCgogICAgaWYgbWVzc2FnZS5zaG91bGRfdHJhbnNmZXJfdmFsdWUgYW5kIG1lc3NhZ2UudmFsdWUgIT0gMDoKICAgICAgICBtb3ZlX2V0aGVyKAogICAgICAgICAgICBlbnYuc3RhdGUsIG1lc3NhZ2UuY2FsbGVyLCBtZXNzYWdlLmN1cnJlbnRfdGFyZ2V0LCBtZXNzYWdlLnZhbHVlCiAgICAgICAgKQoKICAgIGV2bSA9IGV4ZWN1dGVfY29kZShtZXNzYWdlLCBlbnYpCiAgICBpZiBldm0uaGFzX2VycmVkOgogICAgICAgICMgcmV2ZXJ0IHN0YXRlIHRvIHRoZSBsYXN0IHNhdmVkIGNoZWNrcG9pbnQKICAgICAgICAjIHNpbmNlIHRoZSBtZXNzYWdlIGNhbGwgcmVzdWx0ZWQgaW4gYW4gZXJyb3IKICAgICAgICByb2xsYmFja190cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICBlbHNlOgogICAgICAgIGNvbW1pdF90cmFuc2FjdGlvbihlbnYuc3RhdGUpCiAgICByZXR1cm4gZXZtCpSFlIGUfZQoaAVoBmggaoUQAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUjFkvaG9tZS9ydW5uZXIvd29yay9leGVjdXRpb24tc3BlY3MvZXhlY3V0aW9uLXNwZWNzL3NyYy9ldGhlcmV1bS9kYW9fZm9yay92bS9pbnRlcnByZXRlci5weZSMCXhtbDpzcGFjZZRqlAIAAIwFZm9yY2WUiYwIbGFuZ3VhZ2WUjAZweXRob26UjA5oaWdobGlnaHRfYXJnc5R9lGopBwAASwFzjAdsaW5lbm9zlIl1aBxqEQcAAGgdaB5oH0u7aCBq5Q4AAHViZWgOfZQoaBBdlGrYAQAAYWgTXZRoFV2UjA9w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c190b19kZWxldGU9c2V0KCksCiAgICAgICAgaGFzX2VycmVkPUZhbHNlLAogICAgICAgIGNoaWxkcmVuPVtdLAogICAgKQogICAgdHJ5OgoKICAgICAgICBpZiBldm0ubWVzc2FnZS5jb2RlX2FkZHJlc3MgaW4gUFJFX0NPTVBJTEVEX0NPTlRSQUNUUzoKICAgICAgICAgICAgZXZtX3RyYWNlKGV2bSwgZXZtLm1lc3NhZ2UuY29kZV9hZGRyZXNzKQogICAgICAgICAgICBQUkVfQ09NUElMRURfQ09OVFJBQ1RTW2V2bS5tZXNzYWdlLmNvZGVfYWRkcmVzc10oZXZtKQogICAgICAgICAgICByZXR1cm4gZXZtCgogICAgICAgIHdoaWxlIGV2bS5ydW5uaW5nIGFuZCBldm0ucGMgPCBsZW4oZXZtLmNvZGUpOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICBvcCA9IE9wcyhldm0uY29kZVtldm0ucGNdKQogICAgICAgICAgICBleGNlcHQgVmFsdWVFcnJvcjoKICAgICAgICAgICAgICAgIHJhaXNlIEludmFsaWRPcGNvZGUoZXZtLmNvZGVbZXZtLnBjXSkKCiAgICAgICAgICAgIGV2bV90cmFjZShldm0sIG9wKQogICAgICAgICAgICBvcF9pbXBsZW1lbnRhdGlvbltvcF0oZXZtKQoKICAgIGV4Y2VwdCBFeGNlcHRpb25hbEhhbHQ6CiAgICAgICAgZXZtLmdhc19sZWZ0ID0gVWludCgwKQogICAgICAgIGV2bS5oYXNfZXJyZWQgPSBUcnVlCiAgICByZXR1cm4gZXZtCpRoB12UKGg/WBgCAABkZWYgZXhlY3V0ZV9jb2RlKG1lc3NhZ2U6IE1lc3NhZ2UsIGVudjogRW52aXJvbm1lbnQpIC0+IEV2bToKICAgIGNvZGUgPSBtZXNzYWdlLmNvZGUKICAgIHZhbGlkX2p1bXBfZGVzdGluYXRpb25zID0gZ2V0X3ZhbGlkX2p1bXBfZGVzdGluYXRpb25zKGNvZGUpCiAgICBldm0gPSBFdm0oCiAgICAgICAgcGM9VWludCgwKSwKICAgICAgICBzdGFjaz1bXSwKICAgICAgICBtZW1vcnk9Ynl0ZWFycmF5KCksCiAgICAgICAgY29kZT1jb2RlLAogICAgICAgIGdhc19sZWZ0PW1lc3NhZ2UuZ2FzLAogICAgICAgIGVudj1lbnYsCiAgICAgICAgdmFsaWRfanVtcF9kZXN0aW5hdGlvbnM9dmFsaWRfanVtcF9kZXN0aW5hdGlvbnMsCiAgICAgICAgbG9ncz0oKSwKICAgICAgICByZWZ1bmRfY291bnRlcj1VMjU2KDApLAogICAgICAgIHJ1bm5pbmc9VHJ1ZSwKICAgICAgICBtZXNzYWdlPW1lc3NhZ2UsCiAgICAgICAgb3V0cHV0PWIiIiwKICAgICAgICBhY2NvdW50c190b19kZWxldGU9c2V0KCksCiAgICAgICAgaGFzX2VycmVkPUZhbHNlLAogICAgICAgIJSFlIGUfZQoaAVoBmggakUSAABoIWgDaB1oRGgfSwB1YmpVCQAAKYGUfZQoaAVoBmgHXZRoP4wRY2hpbGRyZW49W10sCiAgICCUhZSBlH2UKGgFaAZoIGpNEgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlIwOY2hhbmdlLXJlbW92ZWSUYWgVXZRoF12UaBldlHVoHGpUCQAAaCBqRRIAAGghaANoHWhEaB9LAHViaD9YUAIAACkKICAgIHRyeToKCiAgICAgICAgaWYgZXZtLm1lc3NhZ2UuY29kZV9hZGRyZXNzIGluIFBSRV9DT01QSUxFRF9DT05UUkFDVFM6CiAgICAgICAgICAgIGV2bV90cmFjZShldm0sIGV2bS5tZXNzYWdlLmNvZGVfYWRkcmVzcykKICAgICAgICAgICAgUFJFX0NPTVBJTEVEX0NPTlRSQUNUU1tldm0ubWVzc2FnZS5jb2RlX2FkZHJlc3NdKGV2bSkKICAgICAgICAgICAgcmV0dXJuIGV2bQoKICAgICAgICB3aGlsZSBldm0ucnVubmluZyBhbmQgZXZtLnBjIDwgbGVuKGV2bS5jb2RlKToKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgb3AgPSBPcHMoZXZtLmNvZGVbZXZtLnBjXSkKICAgICAgICAgICAgZXhjZXB0IFZhbHVlRXJyb3I6CiAgICAgICAgICAgICAgICByYWlzZSBJbnZhbGlkT3Bjb2RlKGV2bS5jb2RlW2V2bS5wY10pCgogICAgICAgICAgICBldm1fdHJhY2UoZXZtLCBvcCkKICAgICAgICAgICAgb3BfaW1wbGVtZW50YXRpb25bb3BdKGV2bSkKCiAgICBleGNlcHQgRXhjZXB0aW9uYWxIYWx0OgogICAgICAgIGV2bS5nYXNfbGVmdCA9IFVpbnQoMCkKICAgICAgICBldm0uaGFzX2VycmVkID0gVHJ1ZQogICAgcmV0dXJuIGV2bQqUhZSBlH2UKGgFaAZoIGpFEgAAaCFoA2gdaERoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxZL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIucHmUjAl4bWw6c3BhY2WUapQCAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqKQcAAEsBc4wHbGluZW5vc5SJdWgcahEHAABoHWgeaB9L0WggaqMQAABoIWgDdWJlaA59lChoEF2UavoBAABhaBNdlGgVXZSMDGV4ZWN1dGVfY29kZZRhaBddlGgZXZR1aBxoM2gdaB5oH0vAaCBqnAYAAGghaAN1Ymg0KYGUfZQoaAVoBmgHXZQoaDkpgZR9lChoBYwaY29sbGVjdF9hY2NvdW50c190b19kZWxldGWUaAddlGg/jBpjb2xsZWN0X2FjY291bnRzX3RvX2RlbGV0ZZSFlIGUfZQoaAVoBmggangSAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaDhoHWgeaB9L1mgganUSAAB1YmgkKYGUfZQoaAVoBmgHXZRoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAdlbnRyaWVzlF2UdWgcaCNoHU5oH05oIGp1EgAAdWJqzgYAACmBlH2UKGgFaAZoB12UKGrTBgAAKYGUfZQoaAWMH2NvbGxlY3RfYWNjb3VudHNfdG9fZGVsZXRlKGV2bSmUaAddlChq2QYAACmBlH2UKGgFjBpjb2xsZWN0X2FjY291bnRzX3RvX2RlbGV0ZZRoB12UaD+MGmNvbGxlY3RfYWNjb3VudHNfdG9fZGVsZXRllIWUgZR9lChoBWgGaCBqmBIAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZQoauQGAABq5QYAAGrmBgAAaucGAABlaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUapQCAAB1aBxq2AYAAGgdaB5oH05oIGqUEgAAdWJqoQoAACmBlH2UKGgFjANldm2UaAddlGqnCgAAKYGUfZQoaAWMA2V2bZRoB12UalUJAAApgZR9lChoBWgGaAddlGg/jANldm2UhZSBlH2UKGgFaAZoIGqvEgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGq2CgAAYWgVXZRoF12UaBldlHVoHGpUCQAAaB1OaB9OaCBqqxIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRqlAIAAHVoHGqmCgAAaB1OaB9OaCBqpxIAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMCXhtbDpzcGFjZZRqlAIAAHVoHGqgCgAAaB1oHmgfTmggapQSAAB1YmVoDn2UKGgQXZSMO2V0aGVyZXVtLmRhb19mb3JrLnZtLmludGVycHJldGVyLmNvbGxlY3RfYWNjb3VudHNfdG9fZGVsZXRllGFoE12UKGrvBgAAavAGAACMAnB5lGryBgAAavMGAABlaBVdlGgXXZRoGV2UjAZtb2R1bGWUavgGAACMBWNsYXNzlGgGjAhmdWxsbmFtZZRqmhIAAHVoHGrSBgAAaB1oHmgfS9loIGqREgAAdWJq/AYAACmBlH2UKGgFaAZoB12UKGhpKYGUfZQoaAWMVUNvbGxlY3RzIGFsbCB0aGUgYWNjb3VudHMgdGhhdCB3ZXJlIG1hcmtlZCBmb3IgZGVsZXRpb24gYnkgdGhlCmBTRUxGREVTVFJVQ1RgIG9wY29kZS6UaAddlChoP4w/Q29sbGVjdHMgYWxsIHRoZSBhY2NvdW50cyB0aGF0IHdlcmUgbWFya2VkIGZvciBkZWxldGlvbiBieSB0aGUKlIWUgZR9lChoBWgGaCBq2BIAAGghaANoHWhEaB9LAHViavMDAAApgZR9lChoBYwOYFNFTEZERVNUUlVDVGCUaAddlGg/jAxTRUxGREVTVFJVQ1SUhZSBlH2UKGgFaAZoIGrgEgAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGryAwAAaB1OaB9OaCBq2BIAAHViaD+MCCBvcGNvZGUulIWUgZR9lChoBWgGaCBq2BIAAGghaANoHWhEaB9LAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxoaGgdaB5oH0vcaCBq1RIAAHViajMLAAApgZR9lChoBWgGaAddlChqOAsAACmBlH2UKGgFaAZoB12UKGo9CwAAKYGUfZQoaAWMClBhcmFtZXRlcnOUaAddlGg/jApQYXJhbWV0ZXJzlIWUgZR9lChoBWgGaCBq/hIAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqPAsAAGgdaB5oH0sAaCBq+xIAAHViak0LAAApgZR9lChoBWgGaAddlGhpKYGUfZQoaAWMHWV2bSAtLSBUaGUgY3VycmVudCBFVk0gZnJhbWUulGgHXZQoalwLAAApgZR9lChoBYwDZXZtlGgHXZRoP4wDZXZtlIWUgZR9lChoBWgGaCBqExMAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZSMC3JlZnNwZWNpZmljlIiMCXB5Om1vZHVsZZRq+AYAAIwIcHk6Y2xhc3OUTnVoHGpbCwAAaB1OaB9OaCBqDxMAAHViaD+MGyDigJMgVGhlIGN1cnJlbnQgRVZNIGZyYW1lLpSFlIGUfZQoaAVoBmggag8TAABoIWgDaB1oRGgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGoMEwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpMCwAAaB1OaB9OaCBq+xIAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqNwsAAGgdTmgfTmggavgSAAB1Ymo4CwAAKYGUfZQoaAVoBmgHXZQoaj0LAAApgZR9lChoBYwHUmV0dXJuc5RoB12UaD+MB1JldHVybnOUhZSBlH2UKGgFaAZoIGo9EwAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGo8CwAAaB1oHmgfSwBoIGo6EwAAdWJqTQsAACmBlH2UKGgFaAZoB12UaGkpgZR9lChoBYxjYWNjb3VudHNfdG9fZGVsZXRlIC0tIHJldHVybnMgYWxsIHRoZSBhY2NvdW50cyBuZWVkIG1hcmtlZCBmb3IgZGVsZXRpb24gYnkgdGhlClNFTEZERVNUUlVDVCBvcGNvZGUulGgHXZQoatELAAApgZR9lChoBYwWKiphY2NvdW50c190b19kZWxldGUqKpRoB12UaD+MEmFjY291bnRzX3RvX2RlbGV0ZZSFlIGUfZQoaAVoBmggalITAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcatALAABoHU5oH05oIGpOEwAAdWJoP4w+IOKAkyByZXR1cm5zIGFsbCB0aGUgYWNjb3VudHMgbmVlZCBtYXJrZWQgZm9yIGRlbGV0aW9uIGJ5IHRoZQqUhZSBlH2UKGgFaAZoIGpOEwAAaCFoA2gdaERoH0sAdWJq8wMAACmBlH2UKGgFjA5gU0VMRkRFU1RSVUNUYJRoB12UaD+MDFNFTEZERVNUUlVDVJSFlIGUfZQoaAVoBmggamQTAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcavIDAABoHU5oH05oIGpOEwAAdWJoP4wIIG9wY29kZS6UhZSBlH2UKGgFaAZoIGpOEwAAaCFoA2gdaERoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqSxMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqTAsAAGgdTmgfTmggajoTAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajcLAABoHU5oH05oIGr4EgAAdWJqOAsAACmBlH2UKGgFaAZoB12UKGo9CwAAKYGUfZQoaAWMC1JldHVybiB0eXBllGgHXZRoP4wLUmV0dXJuIHR5cGWUhZSBlH2UKGgFaAZoIGqLEwAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGo8CwAAaB1oHmgfSwBoIGqIEwAAdWJqTQsAACmBlH2UKGgFaAZoB12UaGkpgZR9lChoBYwDc2V0lGgHXZRq8wMAACmBlH2UKGgFjAVgc2V0YJRoB12UaD+MA3NldJSFlIGUfZQoaAVoBmggaqATAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcavIDAABoHU5oH05oIGqcEwAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqmRMAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqTAsAAGgdTmgfTmggaogTAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajcLAABoHU5oH05oIGr4EgAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGoyCwAAaB1OaB9OaCBq1RIAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxq+wYAAGgdaB5oH05oIGqREgAAdWJlaA59lChoEF2UaBNdlChqzhIAAIwIZnVuY3Rpb26UZWgVXZRoF12UaBldlIwGZG9tYWlulGrOEgAAjAdvYmp0eXBllGrPEwAAjAhkZXNjdHlwZZRqzxMAAIwHbm9pbmRleJSJdWgcas0GAABoHU5oH05oIGp1EgAAdWJqEgcAACmBlH2UKGgFWCYBAABkZWYgY29sbGVjdF9hY2NvdW50c190b19kZWxldGUoZXZtOiBFdm0pIC0+IFNldFtBZGRyZXNzXToKICAgIGlmIGV2bS5oYXNfZXJyZWQ6CiAgICAgICAgcmV0dXJuIHNldCgpCiAgICBlbHNlOgogICAgICAgIHJldHVybiBzZXQoCiAgICAgICAgICAgIGNoYWluKAogICAgICAgICAgICAgICAgZXZtLmFjY291bnRzX3RvX2RlbGV0ZSwKICAgICAgICAgICAgICAgICooY29sbGVjdF9hY2NvdW50c190b19kZWxldGUoY2hpbGQpIGZvciBjaGlsZCBpbiBldm0uY2hpbGRyZW4pLAogICAgICAgICAgICApCiAgICAgICAgKQqUaAddlGg/WCYBAABkZWYgY29sbGVjdF9hY2NvdW50c190b19kZWxldGUoZXZtOiBFdm0pIC0+IFNldFtBZGRyZXNzXToKICAgIGlmIGV2bS5oYXNfZXJyZWQ6CiAgICAgICAgcmV0dXJuIHNldCgpCiAgICBlbHNlOgogICAgICAgIHJldHVybiBzZXQoCiAgICAgICAgICAgIGNoYWluKAogICAgICAgICAgICAgICAgZXZtLmFjY291bnRzX3RvX2RlbGV0ZSwKICAgICAgICAgICAgICAgICooY29sbGVjdF9hY2NvdW50c190b19kZWxldGUoY2hpbGQpIGZvciBjaGlsZCBpbiBldm0uY2hpbGRyZW4pLAogICAgICAgICAgICApCiAgICAgICAgKQqUhZSBlH2UKGgFaAZoIGrXEwAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllIxZL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIucHmUjAl4bWw6c3BhY2WUapQCAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqKQcAAEsBc4wHbGluZW5vc5SJdWgcahEHAABoHWgeaB9L6GgganUSAAB1YmVoDn2UKGgQXZRqHAIAAGFoE12UjA5jaGFuZ2UtcmVtb3ZlZJRhaBVdlIwaY29sbGVjdF9hY2NvdW50c190b19kZWxldGWUYWgXXZRoGV2UdWgcaDNoHWgeaB9L1mggapwGAABoIWgDdWJoNCmBlH2UKGgFaAZoB12UKGg5KYGUfZQoaAWMFGNhbGN1bGF0ZV9nYXNfcmVmdW5klGgHXZRoP4wUY2FsY3VsYXRlX2dhc19yZWZ1bmSUhZSBlH2UKGgFaAZoIGr5EwAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGg4aB1oHmgfS+1oIGr2EwAAdWJoJCmBlH2UKGgFaAZoB12UaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwHZW50cmllc5RdlHVoHGgjaB1OaB9OaCBq9hMAAHVias4GAAApgZR9lChoBWgGaAddlChq0wYAACmBlH2UKGgFjBljYWxjdWxhdGVfZ2FzX3JlZnVuZChldm0plGgHXZQoatkGAAApgZR9lChoBYwUY2FsY3VsYXRlX2dhc19yZWZ1bmSUaAddlGg/jBRjYWxjdWxhdGVfZ2FzX3JlZnVuZJSFlIGUfZQoaAVoBmggahkUAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UKGrkBgAAauUGAABq5gYAAGrnBgAAZWgVXZRoF12UaBldlIwJeG1sOnNwYWNllGqUAgAAdWgcatgGAABoHWgeaB9OaCBqFRQAAHViaqEKAAApgZR9lChoBYwDZXZtlGgHXZRqpwoAACmBlH2UKGgFjANldm2UaAddlGpVCQAAKYGUfZQoaAVoBmgHXZRoP4wDZXZtlIWUgZR9lChoBWgGaCBqMBQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRqtgoAAGFoFV2UaBddlGgZXZR1aBxqVAkAAGgdTmgfTmggaiwUAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUapQCAAB1aBxqpgoAAGgdTmgfTmggaigUAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAl4bWw6c3BhY2WUapQCAAB1aBxqoAoAAGgdaB5oH05oIGoVFAAAdWJlaA59lChoEF2UjDVldGhlcmV1bS5kYW9fZm9yay52bS5pbnRlcnByZXRlci5jYWxjdWxhdGVfZ2FzX3JlZnVuZJRhaBNdlChq7wYAAGrwBgAAjAJweZRq8gYAAGrzBgAAZWgVXZRoF12UaBldlIwGbW9kdWxllGr4BgAAjAVjbGFzc5RoBowIZnVsbG5hbWWUahsUAAB1aBxq0gYAAGgdaB5oH0vwaCBqEhQAAHViavwGAAApgZR9lChoBWgGaAddlChoaSmBlH2UKGgFjFJBZGRzIHVwIHRoZSBnYXMgdGhhdCB3YXMgcmVmdW5kZWQgaW4gZWFjaCBleGVjdXRpb24gZnJhbWUgZHVyaW5nIHRoZQptZXNzYWdlIGNhbGwulGgHXZRoP4xSQWRkcyB1cCB0aGUgZ2FzIHRoYXQgd2FzIHJlZnVuZGVkIGluIGVhY2ggZXhlY3V0aW9uIGZyYW1lIGR1cmluZyB0aGUKbWVzc2FnZSBjYWxsLpSFlIGUfZQoaAVoBmggalkUAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHWgeaB9L82ggalYUAAB1YmozCwAAKYGUfZQoaAVoBmgHXZQoajgLAAApgZR9lChoBWgGaAddlChqPQsAACmBlH2UKGgFjApQYXJhbWV0ZXJzlGgHXZRoP4wKUGFyYW1ldGVyc5SFlIGUfZQoaAVoBmggam0UAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajwLAABoHWgeaB9LAGggamoUAAB1YmpNCwAAKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFjB1ldm0gLS0gVGhlIGN1cnJlbnQgRVZNIGZyYW1lLpRoB12UKGpcCwAAKYGUfZQoaAWMA2V2bZRoB12UaD+MA2V2bZSFlIGUfZQoaAVoBmggaoIUAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAtyZWZzcGVjaWZpY5SIjAlweTptb2R1bGWUavgGAACMCHB5OmNsYXNzlE51aBxqWwsAAGgdTmgfTmggan4UAAB1Ymg/jBsg4oCTIFRoZSBjdXJyZW50IEVWTSBmcmFtZS6UhZSBlH2UKGgFaAZoIGp+FAAAaCFoA2gdaERoH0sAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGhoaB1OaB9OaCBqexQAAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqTAsAAGgdTmgfTmggamoUAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajcLAABoHU5oH05oIGpnFAAAdWJqOAsAACmBlH2UKGgFaAZoB12UKGo9CwAAKYGUfZQoaAWMB1JldHVybnOUaAddlGg/jAdSZXR1cm5zlIWUgZR9lChoBWgGaCBqrBQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqPAsAAGgdaB5oH0sAaCBqqRQAAHViak0LAAApgZR9lChoBWgGaAddlGhpKYGUfZQoaAWMX2dhc19yZWZ1bmQgLS0gcmV0dXJucyB0aGUgdG90YWwgZ2FzIHRoYXQgbmVlZHMgdG8gYmUgcmVmdW5kZWQgYWZ0ZXIgZXhlY3V0aW5nIHRoZQptZXNzYWdlIGNhbGwulGgHXZQoatELAAApgZR9lChoBYwOKipnYXNfcmVmdW5kKiqUaAddlGg/jApnYXNfcmVmdW5klIWUgZR9lChoBWgGaCBqwRQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxq0AsAAGgdTmgfTmggar0UAAB1Ymg/jFYg4oCTIHJldHVybnMgdGhlIHRvdGFsIGdhcyB0aGF0IG5lZWRzIHRvIGJlIHJlZnVuZGVkIGFmdGVyIGV4ZWN1dGluZyB0aGUKbWVzc2FnZSBjYWxsLpSFlIGUfZQoaAVoBmggar0UAABoIWgDaB1oRGgfSwB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGq6FAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpMCwAAaB1OaB9OaCBqqRQAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqNwsAAGgdTmgfTmggamcUAAB1Ymo4CwAAKYGUfZQoaAVoBmgHXZQoaj0LAAApgZR9lChoBYwLUmV0dXJuIHR5cGWUaAddlGg/jAtSZXR1cm4gdHlwZZSFlIGUfZQoaAVoBmggaugUAABoIWgDaB1oRGgfSwB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajwLAABoHWgeaB9LAGggauUUAAB1YmpNCwAAKYGUfZQoaAVoBmgHXZRoaSmBlH2UKGgFjBhldGhlcmV1bS5iYXNlX3R5cGVzLlUyNTaUaAddlGrzAwAAKYGUfZQoaAWMGmBldGhlcmV1bS5iYXNlX3R5cGVzLlUyNTZglGgHXZRoP4wYZXRoZXJldW0uYmFzZV90eXBlcy5VMjU2lIWUgZR9lChoBWgGaCBq/RQAAGghaANoHWhEaB9LAHViYWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxq8gMAAGgdTmgfTmggavkUAAB1YmFoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcaGhoHU5oH05oIGr2FAAAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGpMCwAAaB1OaB9OaCBq5RQAAHViZWgOfZQoaBBdlGgTXZRoFV2UaBddlGgZXZR1aBxqNwsAAGgdTmgfTmggamcUAAB1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UdWgcajILAABoHU5oH05oIGpWFAAAdWJlaA59lChoEF2UaBNdlGgVXZRoF12UaBldlHVoHGr7BgAAaB1oHmgfTmggahIUAAB1YmVoDn2UKGgQXZRoE12UKGpPFAAAjAhmdW5jdGlvbpRlaBVdlGgXXZRoGV2UjAZkb21haW6Uak8UAACMB29ianR5cGWUaiwVAACMCGRlc2N0eXBllGosFQAAjAdub2luZGV4lIl1aBxqzQYAAGgdTmgfTmggavYTAAB1YmoSBwAAKYGUfZQoaAWM4GRlZiBjYWxjdWxhdGVfZ2FzX3JlZnVuZChldm06IEV2bSkgLT4gVTI1NjoKICAgIGlmIGV2bS5oYXNfZXJyZWQ6CiAgICAgICAgcmV0dXJuIFUyNTYoMCkKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGV2bS5yZWZ1bmRfY291bnRlciArIHN1bSgKICAgICAgICAgICAgY2FsY3VsYXRlX2dhc19yZWZ1bmQoY2hpbGRfZXZtKSBmb3IgY2hpbGRfZXZtIGluIGV2bS5jaGlsZHJlbgogICAgICAgICkKlGgHXZRoP4zgZGVmIGNhbGN1bGF0ZV9nYXNfcmVmdW5kKGV2bTogRXZtKSAtPiBVMjU2OgogICAgaWYgZXZtLmhhc19lcnJlZDoKICAgICAgICByZXR1cm4gVTI1NigwKQogICAgZWxzZToKICAgICAgICByZXR1cm4gZXZtLnJlZnVuZF9jb3VudGVyICsgc3VtKAogICAgICAgICAgICBjYWxjdWxhdGVfZ2FzX3JlZnVuZChjaGlsZF9ldm0pIGZvciBjaGlsZF9ldm0gaW4gZXZtLmNoaWxkcmVuCiAgICAgICAgKQqUhZSBlH2UKGgFaAZoIGo0FQAAaCFoA2gdaERoH0sAdWJhaA59lChoEF2UaBNdlGgVXZRoF12UaBldlIwGc291cmNllJWqCgAAAAAAAIxZL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy9zcmMvZXRoZXJldW0vZGFvX2Zvcmsvdm0vaW50ZXJwcmV0ZXIucHmUjAl4bWw6c3BhY2WUapQCAACMBWZvcmNllImMCGxhbmd1YWdllIwGcHl0aG9ulIwOaGlnaGxpZ2h0X2FyZ3OUfZRqKQcAAEsBc4wHbGluZW5vc5SJdWgcahEHAABoHWgeaB9L/2ggavYTAAB1YmVoDn2UKGgQXZRqPwIAAGFoE12UjA5jaGFuZ2UtcmVtb3ZlZJRhaBVdlIwUY2FsY3VsYXRlX2dhc19yZWZ1bmSUYWgXXZRoGV2UdWgcaDNoHWgeaB9L7WggapwGAABoIWgDdWJlaA59lChoEF2UajEBAABhaBNdlGgVXZSMDm1vZHVsZSBkZXRhaWxzlGFoF12UaBldlHVoHGgzaB1oHmgfSzZoIGg1aCFoA3ViZWgOfZQoaBBdlIwoZXRoZXJldW0tdmlydHVhbC1tYWNoaW5lLWV2bS1pbnRlcnByZXRlcpRhaBNdlGgVXZSMKmV0aGVyZXVtIHZpcnR1YWwgbWFjaGluZSAoZXZtKSBpbnRlcnByZXRlcpRhaBddlGgZXZR1aBxoM2gdaB5oH0sEaCBoA2ghaAN1YmVoDn2UKGgQXZRoE12UaBVdlGgXXZRoGV2UjAZzb3VyY2WUaER1aBxoAYwOY3VycmVudF9zb3VyY2WUaESMDGN1cnJlbnRfbGluZZRLAIwIc2V0dGluZ3OUjBFkb2N1dGlscy5mcm9udGVuZJSMBlZhbHVlc5STlCmBlH2UKIwMcmVwb3J0X2xldmVslEsCjApoYWx0X2xldmVslEsEjBFleGl0X3N0YXR1c19sZXZlbJRLBYwFZGVidWeUTowOd2FybmluZ19zdHJlYW2UTowJdHJhY2ViYWNrlE6MD291dHB1dF9lbmNvZGluZ5SMBXV0Zi04lIwdb3V0cHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjBF4bWxjaGFycmVmcmVwbGFjZZSMDmVycm9yX2VuY29kaW5nlIwFdXRmLTiUjBxlcnJvcl9lbmNvZGluZ19lcnJvcl9oYW5kbGVylIwQYmFja3NsYXNocmVwbGFjZZSME3JlY29yZF9kZXBlbmRlbmNpZXOUjA5kb2N1dGlscy51dGlsc5SMDkRlcGVuZGVuY3lMaXN0lJOUKYGUfZQojARsaXN0lF2UjARmaWxllE51YowGY29uZmlnlE6MDWR1bXBfc2V0dGluZ3OUTowOZHVtcF9pbnRlcm5hbHOUTowPZHVtcF90cmFuc2Zvcm1zlE6MD2R1bXBfcHNldWRvX3htbJROjBBleHBvc2VfaW50ZXJuYWxzlE6MDnN0cmljdF92aXNpdG9ylE6MD19kaXNhYmxlX2NvbmZpZ5ROjAdfc291cmNllE6MDF9kZXN0aW5hdGlvbpSMQmRvYy9kaWZmcy9kYW9fZm9ya190YW5nZXJpbmVfd2hpc3RsZS92bS9pbnRlcnByZXRlci9pbmRleC5waWNrbGU2NJSMDV9jb25maWdfZmlsZXOUXZSMEWxpbmVfbGVuZ3RoX2xpbWl0lE0QJ4wJdGFiX3dpZHRolEsIjBBzeW50YXhfaGlnaGxpZ2h0lIwEbG9uZ5SMDHNtYXJ0X3F1b3Rlc5SJjBNzbWFydHF1b3Rlc19sb2NhbGVzlE6MHWNoYXJhY3Rlcl9sZXZlbF9pbmxpbmVfbWFya3VwlImMBndyaXRlcpSMA3htbJSMGWNvbXBhcmVfc2VjdGlvbnNfYnlfbmFtZXOUSwGMDGR1bXBfcnN0ZGlmZpROjAVfYm90aJR9lChoOE6MCWdlbmVyYXRvcpROjAlkYXRlc3RhbXCUTowLc291cmNlX2xpbmuUTowKc291cmNlX3VybJROjA10b2NfYmFja2xpbmtzlGr9AgAAjBJmb290bm90ZV9iYWNrbGlua3OUSwGMDXNlY3RudW1feGZvcm2USwGMDmRvY3RpdGxlX3hmb3JtlEsBjA1kb2NpbmZvX3hmb3JtlEsBjBJzZWN0c3VidGl0bGVfeGZvcm2USwCMDnN0cmlwX2NvbW1lbnRzlE6MDmlucHV0X2VuY29kaW5nlE6MHGlucHV0X2VuY29kaW5nX2Vycm9yX2hhbmRsZXKUjAZzdHJpY3SUjA1sYW5ndWFnZV9jb2RllIwCZW6UjA5wZXBfcmVmZXJlbmNlc5ROjAxwZXBfYmFzZV91cmyUjB9odHRwOi8vd3d3LnB5dGhvbi5vcmcvZGV2L3BlcHMvlIwVcGVwX2ZpbGVfdXJsX3RlbXBsYXRllIwIcGVwLSUwNGSUjA5yZmNfcmVmZXJlbmNlc5ROjAxyZmNfYmFzZV91cmyUjBtodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC+UjB10cmltX2Zvb3Rub3RlX3JlZmVyZW5jZV9zcGFjZZROjBZmaWxlX2luc2VydGlvbl9lbmFibGVklEsBjAtyYXdfZW5hYmxlZJRLAYwOYXV0b19pZF9wcmVmaXiUjAJpZJSMCWlkX3ByZWZpeJRoBowbc3RyaXBfZWxlbWVudHNfd2l0aF9jbGFzc2VzlE6MDXN0cmlwX2NsYXNzZXOUTnWMBGJvdGiUfZSMCl9vcHRpb25zVG+UjAVfYm90aJSMC19vbGRfc291cmNllIxPL2hvbWUvcnVubmVyL3dvcmsvZXhlY3V0aW9uLXNwZWNzL2V4ZWN1dGlvbi1zcGVjcy8udG94L2RvY3Mvc3RhZ2UwX291dC9hdXRvYXBpL5SMC19uZXdfc291cmNllIwJZG9jL2RpZmZzlGqwFQAAarEVAACMFmlnbm9yZV9pbl9zZWN0aW9uX25hbWWUXZQojANkYW+UjARmb3JrlIwJdGFuZ2VyaW5llIwHd2hpc3RsZZRldWKMCHJlcG9ydGVylE6MEGluZGlyZWN0X3RhcmdldHOUXZSMEXN1YnN0aXR1dGlvbl9kZWZzlH2UjBJzdWJzdGl0dXRpb25fbmFtZXOUfZSMCHJlZm5hbWVzlH2UjAZyZWZpZHOUfZSMB25hbWVpZHOUfZSMCW5hbWV0eXBlc5R9lGgQfZSMDWZvb3Rub3RlX3JlZnOUfZSMDWNpdGF0aW9uX3JlZnOUfZSMDWF1dG9mb290bm90ZXOUXZSMEWF1dG9mb290bm90ZV9yZWZzlF2UjBBzeW1ib2xfZm9vdG5vdGVzlF2UjBRzeW1ib2xfZm9vdG5vdGVfcmVmc5RdlIwJZm9vdG5vdGVzlF2UjAljaXRhdGlvbnOUXZSMEmF1dG9mb290bm90ZV9zdGFydJRLAYwVc3ltYm9sX2Zvb3Rub3RlX3N0YXJ0lEsAjAppZF9jb3VudGVylIwLY29sbGVjdGlvbnOUjAdDb3VudGVylJOUfZSFlFKUjA5wYXJzZV9tZXNzYWdlc5RdlIwSdHJhbnNmb3JtX21lc3NhZ2VzlF2UjAt0cmFuc2Zvcm1lcpROjAtpbmNsdWRlX2xvZ5RdlIwKZGVjb3JhdGlvbpROaCFoA3ViLg==