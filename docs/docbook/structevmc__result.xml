<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_structevmc__result" xml:lang="en-US">
<title>evmc_result Struct Reference</title>
<indexterm><primary>evmc_result</primary></indexterm>
<para>

<para>The EVM code execution result. </para>
 
</para>
<para>
<computeroutput>#include &lt;evmc.h&gt;</computeroutput>
</para>
Inheritance diagram for evmc_result:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc__result__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for evmc_result:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="structevmc__result__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_group__EVMC_1ga4c0be97f333c050ff45321fcaa34d920">evmc_status_code</link> <link linkend="_structevmc__result_1a759c4aaa4a1c002f5a8be09ccb0b6a1c">status_code</link></para>

<para>The execution status code. </para>
</listitem>
            <listitem><para>int64_t <link linkend="_structevmc__result_1af8478c93dbcc3cb2876037c5a5afd4c0">gas_left</link></para>

<para>The amount of gas left after the execution. </para>
</listitem>
            <listitem><para>const uint8_t * <link linkend="_structevmc__result_1a61978e85f9d795a7b9695b9cbf1748d6">output_data</link></para>

<para>The reference to output data. </para>
</listitem>
            <listitem><para>size_t <link linkend="_structevmc__result_1a93bb7419aff492cdef754421c6d74e26">output_size</link></para>

<para>The size of the output data. </para>
</listitem>
            <listitem><para><link linkend="_group__EVMC_1ga297c7c7ca966c82296a54683143157b1">evmc_release_result_fn</link> <link linkend="_structevmc__result_1a8727ff83d372ab0067bcf6656d30b0ed">release</link></para>

<para>The method releasing all resources associated with the result object. </para>
</listitem>
            <listitem><para><link linkend="_structevmc__address">evmc_address</link> <link linkend="_structevmc__result_1ae7f37ff7c9cfa3b58af2c89f4d610522">create_address</link></para>

<para>The address of the contract created by create instructions. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_structevmc__result_1aa321f15701e9df26a9f58d60dcbd0ef9">padding</link> [4]</para>

<para>Reserved data that MAY be used by a <link linkend="_structevmc__result">evmc_result</link> object creator. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>The EVM code execution result. </para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00391">391</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_structevmc__result_1ae7f37ff7c9cfa3b58af2c89f4d610522"/><section>
    <title>create_address</title>
<indexterm><primary>create_address</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>create_address</secondary></indexterm>
<para><computeroutput><link linkend="_structevmc__address">evmc_address</link> evmc_result::create_address</computeroutput></para><para>

<para>The address of the contract created by create instructions. </para>
</para>

<para>This field has valid value only if:<itemizedlist>
<listitem>
<para>it is a result of the Host method <link linkend="_structevmc__host__interface_1a0acd6def9c08159acccfba9f9cbf9ca9">evmc_host_interface::call</link></para>
</listitem><listitem>
<para>and the result describes successful contract creation (<link linkend="_structevmc__result_1a759c4aaa4a1c002f5a8be09ccb0b6a1c">evmc_result::status_code</link> is <link linkend="_group__EVMC_1gga4c0be97f333c050ff45321fcaa34d920a4bc3069fec2bab2a55355a72b7db68b7">EVMC_SUCCESS</link>). In all other cases the address MUST be null bytes. </para>
</listitem></itemizedlist>
</para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00454">454</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1af8478c93dbcc3cb2876037c5a5afd4c0"/><section>
    <title>gas_left</title>
<indexterm><primary>gas_left</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>gas_left</secondary></indexterm>
<para><computeroutput>int64_t evmc_result::gas_left</computeroutput></para><para>

<para>The amount of gas left after the execution. </para>
</para>

<para>If <link linkend="_structevmc__result_1a759c4aaa4a1c002f5a8be09ccb0b6a1c">evmc_result::status_code</link> is neither <link linkend="_group__EVMC_1gga4c0be97f333c050ff45321fcaa34d920a4bc3069fec2bab2a55355a72b7db68b7">EVMC_SUCCESS</link> nor <link linkend="_group__EVMC_1gga4c0be97f333c050ff45321fcaa34d920aed708e84d49cc1270e54ec20b0ca0a05">EVMC_REVERT</link> the value MUST be 0. </para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00402">402</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1a61978e85f9d795a7b9695b9cbf1748d6"/><section>
    <title>output_data</title>
<indexterm><primary>output_data</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>output_data</secondary></indexterm>
<para><computeroutput>const uint8_t* evmc_result::output_data</computeroutput></para><para>

<para>The reference to output data. </para>
</para>

<para>The output contains data coming from RETURN opcode (iff evmc_result::code field is <link linkend="_group__EVMC_1gga4c0be97f333c050ff45321fcaa34d920a4bc3069fec2bab2a55355a72b7db68b7">EVMC_SUCCESS</link>) or from REVERT opcode.</para>

<para>The memory containing the output data is owned by EVM and has to be freed with <link linkend="_structevmc__result_1a8727ff83d372ab0067bcf6656d30b0ed">evmc_result::release()</link>.</para>

<para>This MAY be NULL. </para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00415">415</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1a93bb7419aff492cdef754421c6d74e26"/><section>
    <title>output_size</title>
<indexterm><primary>output_size</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>output_size</secondary></indexterm>
<para><computeroutput>size_t evmc_result::output_size</computeroutput></para><para>

<para>The size of the output data. </para>
</para>

<para>If output_data is NULL this MUST be 0. </para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00422">422</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1aa321f15701e9df26a9f58d60dcbd0ef9"/><section>
    <title>padding</title>
<indexterm><primary>padding</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>padding</secondary></indexterm>
<para><computeroutput>uint8_t evmc_result::padding[4]</computeroutput></para><para>

<para>Reserved data that MAY be used by a <link linkend="_structevmc__result">evmc_result</link> object creator. </para>
</para>

<para>This reserved 4 bytes together with 20 bytes from create_address form 24 bytes of memory called &quot;optional data&quot; within <link linkend="_structevmc__result">evmc_result</link> struct to be optionally used by the <link linkend="_structevmc__result">evmc_result</link> object creator.</para>

<para><formalpara><title>See also</title>

<para>evmc_result_optional_data, evmc_get_optional_data().</para>
</formalpara>
Also extends the size of the <link linkend="_structevmc__result">evmc_result</link> to 64 bytes (full cache line). </para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00467">467</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1a8727ff83d372ab0067bcf6656d30b0ed"/><section>
    <title>release</title>
<indexterm><primary>release</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>release</secondary></indexterm>
<para><computeroutput><link linkend="_group__EVMC_1ga297c7c7ca966c82296a54683143157b1">evmc_release_result_fn</link> evmc_result::release</computeroutput></para><para>

<para>The method releasing all resources associated with the result object. </para>
</para>

<para>This method (function pointer) is optional (MAY be NULL) and MAY be set by the VM implementation. If set it MUST be called by the user once to release memory and other resources associated with the result object. Once the resources are released the result object MUST NOT be used again.</para>

<para>The suggested code pattern for releasing execution results: <literallayout><computeroutput><emphasis role="keyword">struct&#32;</emphasis><link linkend="_structevmc__result">evmc_result</link>&#32;result&#32;=&#32;...;
<emphasis role="keywordflow">if</emphasis>&#32;(result.<link linkend="_structevmc__result_1a8727ff83d372ab0067bcf6656d30b0ed">release</link>)
&#32;&#32;&#32;&#32;result.<link linkend="_structevmc__result_1a8727ff83d372ab0067bcf6656d30b0ed">release</link>(&amp;result);
</computeroutput></literallayout></para>

<para><note><title>Note</title>

<para>It works similarly to C++ virtual destructor. Attaching the release function to the result itself allows VM composition. </para>
</note>
</para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00443">443</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<anchor xml:id="_structevmc__result_1a759c4aaa4a1c002f5a8be09ccb0b6a1c"/><section>
    <title>status_code</title>
<indexterm><primary>status_code</primary><secondary>evmc_result</secondary></indexterm>
<indexterm><primary>evmc_result</primary><secondary>status_code</secondary></indexterm>
<para><computeroutput>enum <link linkend="_group__EVMC_1ga4c0be97f333c050ff45321fcaa34d920">evmc_status_code</link> evmc_result::status_code</computeroutput></para><para>

<para>The execution status code. </para>
</para>
<para>
Definition at line <link linkend="_evmc_8h_source_1l00394">394</link> of file <link linkend="_evmc_8h_source">evmc.h</link>.</para>
</section>
<para>
The documentation for this struct was generated from the following file:</para>
include/evmc/<link linkend="_evmc_8h">evmc.h</link></section>
</section>
